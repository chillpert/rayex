<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_api_8hpp" kind="file" language="C++">
    <compoundname>Api.hpp</compoundname>
    <includes refid="_instance_8hpp" local="yes">Instance.hpp</includes>
    <includes refid="_debug_messenger_8hpp" local="yes">DebugMessenger.hpp</includes>
    <includes refid="_queues_8hpp" local="yes">Queues.hpp</includes>
    <includes refid="_surface_8hpp" local="yes">Surface.hpp</includes>
    <includes refid="_pipeline_8hpp" local="yes">Pipeline.hpp</includes>
    <includes refid="_render_pass_8hpp" local="yes">RenderPass.hpp</includes>
    <includes refid="_physical_device_8hpp" local="yes">PhysicalDevice.hpp</includes>
    <includes refid="_device_8hpp" local="yes">Device.hpp</includes>
    <includes refid="_swapchain_8hpp" local="yes">Swapchain.hpp</includes>
    <includes refid="_texture_8hpp" local="yes">Texture.hpp</includes>
    <includes refid="_vertex_8hpp" local="yes">Vertex.hpp</includes>
    <includes refid="_command_buffer_8hpp" local="yes">CommandBuffer.hpp</includes>
    <includes refid="_vertex_buffer_8hpp" local="yes">VertexBuffer.hpp</includes>
    <includes refid="_index_buffer_8hpp" local="yes">IndexBuffer.hpp</includes>
    <includes refid="_descriptor_set_8hpp" local="yes">DescriptorSet.hpp</includes>
    <includes refid="_descriptor_set_layout_8hpp" local="yes">DescriptorSetLayout.hpp</includes>
    <includes refid="_uniform_buffer_8hpp" local="yes">UniformBuffer.hpp</includes>
    <includes refid="_gui_base_8hpp" local="yes">GuiBase.hpp</includes>
    <includes refid="_base_8hpp" local="yes">Base.hpp</includes>
    <includes refid="_ray_tracing_builder_8hpp" local="yes">RayTracingBuilder.hpp</includes>
    <includedby refid="_api_8cpp" local="yes">C:/Repos/renderer/src/api/Api.cpp</includedby>
    <includedby refid="_debug_messenger_8cpp" local="yes">C:/Repos/renderer/src/api/utility/DebugMessenger.cpp</includedby>
    <includedby refid="_renderer_8hpp" local="yes">C:/Repos/renderer/src/Renderer.hpp</includedby>
    <incdepgraph>
      <node id="47">
        <label>glm/gtx/hash.hpp</label>
      </node>
      <node id="45">
        <label>Texture.hpp</label>
        <link refid="_texture_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="58">
        <label>GuiBase.hpp</label>
        <link refid="_gui_base_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>IndexBuffer.hpp</label>
        <link refid="_index_buffer_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>Buffer.hpp</label>
        <link refid="_buffer_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="21">
        <label>cstdint</label>
      </node>
      <node id="40">
        <label>Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>RenderPass.hpp</label>
        <link refid="_render_pass_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="52">
        <label>DescriptorSet.hpp</label>
        <link refid="_descriptor_set_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/Api.hpp</label>
        <link refid="_api_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Swapchain.hpp</label>
        <link refid="_swapchain_8hpp"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Queues.hpp</label>
        <link refid="_queues_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>UniformBuffer.hpp</label>
        <link refid="_uniform_buffer_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>NodeBase.hpp</label>
        <link refid="_node_base_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="56">
        <label>Device.hpp</label>
        <link refid="_device_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>AccelerationStructure.hpp</label>
        <link refid="_acceleration_structure_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>unordered_set</label>
      </node>
      <node id="35">
        <label>DebugMessenger.hpp</label>
        <link refid="_debug_messenger_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="38">
        <label>Pipeline.hpp</label>
        <link refid="_pipeline_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>PhysicalDevice.hpp</label>
        <link refid="_physical_device_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Instance.hpp</label>
        <link refid="_instance_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>RayTracingBuilder.hpp</label>
        <link refid="_ray_tracing_builder_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="5">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="57">
        <label>CommandBuffer.hpp</label>
        <link refid="_command_buffer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="44">
        <label>Model.hpp</label>
        <link refid="_model_8hpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>Base.hpp</label>
        <link refid="_base_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>array</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="53">
        <label>DescriptorSetLayout.hpp</label>
        <link refid="_descriptor_set_layout_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>VertexBuffer.hpp</label>
        <link refid="_vertex_buffer_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstdlib</label>
      </node>
      <node id="46">
        <label>Vertex.hpp</label>
        <link refid="_vertex_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>imgui.h</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>unordered_map</label>
      </node>
      <node id="43">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="41">
        <label>Helpers.hpp</label>
        <link refid="_helpers_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
      <node id="8">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="7">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="37">
        <label>Surface.hpp</label>
        <link refid="_surface_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>C:/Repos/renderer/src/api/Api.cpp</label>
        <link refid="_api_8cpp"/>
      </node>
      <node id="3">
        <label>C:/Repos/renderer/src/api/utility/DebugMessenger.cpp</label>
        <link refid="_debug_messenger_8cpp"/>
      </node>
      <node id="4">
        <label>C:/Repos/renderer/src/Renderer.hpp</label>
        <link refid="_renderer_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/Api.hpp</label>
        <link refid="_api_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Repos/renderer/src/example/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="6">
        <label>C:/Repos/renderer/src/Renderer.cpp</label>
        <link refid="_renderer_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrx_1_1_api" prot="public">rx::Api</innerclass>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>API_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_instance_8hpp" kindref="compound">Instance.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_debug_messenger_8hpp" kindref="compound">DebugMessenger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_queues_8hpp" kindref="compound">Queues.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_surface_8hpp" kindref="compound">Surface.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pipeline_8hpp" kindref="compound">Pipeline.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_pass_8hpp" kindref="compound">RenderPass.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physical_device_8hpp" kindref="compound">PhysicalDevice.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_device_8hpp" kindref="compound">Device.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_swapchain_8hpp" kindref="compound">Swapchain.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_texture_8hpp" kindref="compound">Texture.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vertex_8hpp" kindref="compound">Vertex.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_buffer_8hpp" kindref="compound">CommandBuffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vertex_buffer_8hpp" kindref="compound">VertexBuffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_index_buffer_8hpp" kindref="compound">IndexBuffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_descriptor_set_8hpp" kindref="compound">DescriptorSet.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_descriptor_set_layout_8hpp" kindref="compound">DescriptorSetLayout.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_uniform_buffer_8hpp" kindref="compound">UniformBuffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_gui_base_8hpp" kindref="compound">GuiBase.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_base_8hpp" kindref="compound">Base.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ray_tracing_builder_8hpp" kindref="compound">RayTracingBuilder.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="classrx_1_1_api" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrx_1_1_api" kindref="compound">Api</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_api_1a7bad2b28bb07e9d1702b7b38b5ab1b96" kindref="member">Api</ref>(<sp/>std::shared_ptr&lt;WindowBase&gt;<sp/>window,<sp/>std::shared_ptr&lt;CameraBase&gt;<sp/>camera<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_api_1a7bad2b28bb07e9d1702b7b38b5ab1b96" kindref="member">Api</ref>(<sp/>std::shared_ptr&lt;WindowBase&gt;<sp/>window,<sp/>std::shared_ptr&lt;GuiBase&gt;<sp/>gui,<sp/>std::shared_ptr&lt;CameraBase&gt;<sp/>camera<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/><ref refid="classrx_1_1_api_1ae7ab307628a20bf016e0eb5b030d1d9c" kindref="member">~Api</ref>(<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a1c214a508caee161e41241a66a465d0b" kindref="member">setGui</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;GuiBase&gt;<sp/>gui,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a3e0a1bb5a7c8b518225358fe4ea5ee39" kindref="member">init</ref>(<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a582e12ba6f8b26173a5ef569ee2eeeaa" kindref="member">update</ref>(<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a79f83f0658f4fd2a2012b5191d8e4ee5" kindref="member">render</ref>(<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>Model&gt;</highlight></codeline>
<codeline lineno="63" refid="classrx_1_1_api_1a203b4336eeb7a4afccfeb0612ef99998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a203b4336eeb7a4afccfeb0612ef99998" kindref="member">pushNode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>record<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classrx_1_1_geometry_node" kindref="compound">GeometryNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>node.get(<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>std::dynamic_pointer_cast&lt;GeometryNode&gt;(<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_models.find(<sp/>ptr-&gt;m_modelPath<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>==<sp/>m_models.end(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_models.insert(<sp/>{<sp/>ptr-&gt;m_modelPath,<sp/>std::make_shared&lt;T&gt;(<sp/>ptr-&gt;m_modelPath<sp/>)<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_geometryNodes.push_back(<sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>node&apos;s<sp/>texture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>texturePaths<sp/>=<sp/>ptr-&gt;m_material.getTextures(<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>texturePath<sp/>:<sp/>texturePaths<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_textures.find(<sp/>texturePath<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Texture<sp/>does<sp/>not<sp/>exist<sp/>already.<sp/>It<sp/>will<sp/>be<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>==<sp/>m_textures.end(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_textures.insert(<sp/>{<sp/>texturePath,<sp/>std::make_shared&lt;Texture&gt;(<sp/>texturePath<sp/>)<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>record<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initModel(<sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classrx_1_1_light_node" kindref="compound">LightNode</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>node.get(<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lightNodePtr<sp/>=<sp/>std::dynamic_pointer_cast&lt;LightNode&gt;(<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lightNodes.push_back(<sp/>lightNodePtr<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>record<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swapchainCommandBuffers.<ref refid="classrx_1_1_command_buffer_1ab76173ed0d4409599c99f16f8dd830d7" kindref="member">reset</ref>(<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordSwapchainCommandBuffers(<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>Model&gt;</highlight></codeline>
<codeline lineno="108" refid="classrx_1_1_api_1a72a7ec289fe4c4cb0155cf51270a7164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a72a7ec289fe4c4cb0155cf51270a7164" kindref="member">setNodes</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;Node&gt;&gt;&amp;<sp/>nodes<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_geometryNodes.clear(<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_geometryNodes.reserve(<sp/><ref refid="namespacerx_1a945322f9e9dbda3bc24cd824ec62dd5a" kindref="member">g_maxGeometryNodes</ref><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>nodes<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pushNode&lt;T&gt;(<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_swapchainCommandBuffers.<ref refid="classrx_1_1_command_buffer_1ab76173ed0d4409599c99f16f8dd830d7" kindref="member">reset</ref>(<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recordSwapchainCommandBuffers(<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_api_1a295c1251c0ba46952df9dd19a0f7d1f3" kindref="member">initGui</ref>(<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initRenderPass(<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initModel(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;GeometryNode&gt;<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recordSwapchainCommandBuffers(<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initSyncObjects(<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initDescriptorSetLayouts(<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recreateSwapchain(<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prepareFrame(<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>submitFrame(<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WindowBase&gt;<sp/>m_window;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;CameraBase&gt;<sp/>m_camera;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destruction<sp/>through<sp/>RAII<sp/>for<sp/>following<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_instance" kindref="compound">Instance</ref><sp/>m_instance;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_debug_messenger" kindref="compound">DebugMessenger</ref><sp/>m_debugMessenger;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_surface" kindref="compound">Surface</ref><sp/>m_surface;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_device" kindref="compound">Device</ref><sp/>m_device;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::UniqueCommandPool<sp/>m_graphicsCmdPool;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::UniqueCommandPool<sp/>m_transferCmdPool;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::UniqueFence&gt;<sp/>m_inFlightFences;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::UniqueSemaphore&gt;<sp/>m_imageAvailableSemaphores;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::UniqueSemaphore&gt;<sp/>m_finishedRenderSemaphores;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref><sp/>m_rtDescriptorSetLayout;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::UniqueDescriptorPool<sp/>m_rtDescriptorPool;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_descriptor_set" kindref="compound">DescriptorSet</ref><sp/>m_rtDescriptorSets;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref><sp/>m_descriptorSetLayout;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::UniqueDescriptorPool<sp/>m_descriptorPool;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref><sp/>m_cameraUniformBuffer;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nodes<sp/>to<sp/>render.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;GeometryNode&gt;&gt;<sp/>m_geometryNodes;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;LightNode&gt;&gt;<sp/>m_lightNodes;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;Model&gt;&gt;<sp/>m_models;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;Texture&gt;&gt;<sp/>m_textures;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_swapchain" kindref="compound">Swapchain</ref><sp/>m_swapchain;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_render_pass" kindref="compound">RenderPass</ref><sp/>m_renderPass;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_pipeline" kindref="compound">Pipeline</ref><sp/>m_rtPipeline;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_command_buffer" kindref="compound">CommandBuffer</ref><sp/>m_swapchainCommandBuffers;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GuiBase&gt;<sp/>m_gui;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>destruction<sp/>necessary<sp/>for<sp/>following<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_physical_device" kindref="compound">PhysicalDevice</ref><sp/>m_physicalDevice;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_queues" kindref="compound">Queues</ref><sp/>m_queues;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::Fence&gt;<sp/>m_imagesInFlight;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_ray_tracing_builder" kindref="compound">RayTracingBuilder</ref><sp/>m_rayTracingBuilder;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_recreateSwapchain<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>API_HPP</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/Api.hpp"/>
  </compounddef>
</doxygen>
