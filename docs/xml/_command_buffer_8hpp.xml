<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_command_buffer_8hpp" kind="file" language="C++">
    <compoundname>CommandBuffer.hpp</compoundname>
    <includes refid="stdafx_8hpp" local="yes">pch/stdafx.hpp</includes>
    <includedby refid="_api_8hpp" local="yes">C:/Repos/renderer/src/api/Api.hpp</includedby>
    <includedby refid="_buffer_8cpp" local="yes">C:/Repos/renderer/src/api/buffers/Buffer.cpp</includedby>
    <includedby refid="_command_buffer_8cpp" local="yes">C:/Repos/renderer/src/api/buffers/CommandBuffer.cpp</includedby>
    <includedby refid="_gui_base_8cpp" local="yes">C:/Repos/renderer/src/api/gui/GuiBase.cpp</includedby>
    <includedby refid="_gui_base_8hpp" local="yes">C:/Repos/renderer/src/api/gui/GuiBase.hpp</includedby>
    <includedby refid="_image_8cpp" local="yes">C:/Repos/renderer/src/api/image/Image.cpp</includedby>
    <includedby refid="_ray_tracing_builder_8cpp" local="yes">C:/Repos/renderer/src/api/raytracing/RayTracingBuilder.cpp</includedby>
    <includedby refid="_helpers_8cpp" local="yes">C:/Repos/renderer/src/api/utility/Helpers.cpp</includedby>
    <includedby refid="_initializers_8cpp" local="yes">C:/Repos/renderer/src/api/utility/Initializers.cpp</includedby>
    <incdepgraph>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="11">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="15">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="19">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="31">
        <label>unordered_set</label>
      </node>
      <node id="27">
        <label>fstream</label>
      </node>
      <node id="13">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="2">
        <label>pch/stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="3">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/buffers/CommandBuffer.hpp</label>
        <link refid="_command_buffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="28">
        <label>array</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="20">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>imgui.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>unordered_map</label>
      </node>
      <node id="12">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="8">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>set</label>
      </node>
      <node id="25">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="29">
        <label>memory</label>
      </node>
      <node id="5">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="10">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Repos/renderer/src/api/Api.cpp</label>
        <link refid="_api_8cpp"/>
      </node>
      <node id="11">
        <label>C:/Repos/renderer/src/api/gui/GuiBase.hpp</label>
        <link refid="_gui_base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C:/Repos/renderer/src/api/utility/DebugMessenger.cpp</label>
        <link refid="_debug_messenger_8cpp"/>
      </node>
      <node id="15">
        <label>C:/Repos/renderer/src/api/utility/Helpers.cpp</label>
        <link refid="_helpers_8cpp"/>
      </node>
      <node id="14">
        <label>C:/Repos/renderer/src/api/raytracing/RayTracingBuilder.cpp</label>
        <link refid="_ray_tracing_builder_8cpp"/>
      </node>
      <node id="5">
        <label>C:/Repos/renderer/src/Renderer.hpp</label>
        <link refid="_renderer_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Repos/renderer/src/api/Api.hpp</label>
        <link refid="_api_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>C:/Repos/renderer/src/api/gui/GuiBase.cpp</label>
        <link refid="_gui_base_8cpp"/>
      </node>
      <node id="6">
        <label>C:/Repos/renderer/src/example/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/buffers/CommandBuffer.hpp</label>
        <link refid="_command_buffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>C:/Repos/renderer/src/base/Base.hpp</label>
        <link refid="_base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>C:/Repos/renderer/src/api/utility/Initializers.cpp</label>
        <link refid="_initializers_8cpp"/>
      </node>
      <node id="8">
        <label>C:/Repos/renderer/src/api/buffers/Buffer.cpp</label>
        <link refid="_buffer_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Repos/renderer/src/api/buffers/CommandBuffer.cpp</label>
        <link refid="_command_buffer_8cpp"/>
      </node>
      <node id="13">
        <label>C:/Repos/renderer/src/api/image/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="7">
        <label>C:/Repos/renderer/src/Renderer.cpp</label>
        <link refid="_renderer_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrx_1_1_command_buffer" prot="public">rx::CommandBuffer</innerclass>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COMMAND_BUFFER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMMAND_BUFFER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8hpp" kindref="compound">pch/stdafx.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8" refid="classrx_1_1_command_buffer" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrx_1_1_command_buffer" kindref="compound">CommandBuffer</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="classrx_1_1_command_buffer_1a257a48a9805e2173009f6a3f783acd8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_command_buffer_1a257a48a9805e2173009f6a3f783acd8b" kindref="member">CommandBuffer</ref>(<sp/>)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_command_buffer_1a257a48a9805e2173009f6a3f783acd8b" kindref="member">CommandBuffer</ref>(<sp/>vk::CommandPool<sp/>commandPool,<sp/>uint32_t<sp/>count<sp/>=<sp/>1,<sp/>vk::CommandBufferUsageFlags<sp/>usageFlags<sp/>=<sp/>vk::CommandBufferUsageFlagBits::eOneTimeSubmit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_command_buffer_1abc9618248a49213bb5649495d2194ea5" kindref="member">init</ref>(<sp/>vk::CommandPool<sp/>commandPool,<sp/>uint32_t<sp/>count<sp/>=<sp/>1,<sp/>vk::CommandBufferUsageFlags<sp/>usageFlags<sp/>=<sp/>vk::CommandBufferUsageFlagBits::eOneTimeSubmit<sp/>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classrx_1_1_command_buffer_1aa1a716b752e737da669055a1ad21b52a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;vk::CommandBuffer&gt;<sp/><ref refid="classrx_1_1_command_buffer_1aa1a716b752e737da669055a1ad21b52a" kindref="member">get</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_commandBuffers;<sp/>}</highlight></codeline>
<codeline lineno="17" refid="classrx_1_1_command_buffer_1afc93f4c5731f3b18d24cefc3729f9b0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vk::CommandBuffer<sp/><ref refid="classrx_1_1_command_buffer_1afc93f4c5731f3b18d24cefc3729f9b0a" kindref="member">get</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_commandBuffers[index];<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_command_buffer_1acaea73fae9e61b78257bf735b4235b53" kindref="member">free</ref>(<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_command_buffer_1ab76173ed0d4409599c99f16f8dd830d7" kindref="member">reset</ref>(<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_command_buffer_1a47ea2cef2b275adbe351f46998dfb28d" kindref="member">begin</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_command_buffer_1a38438d77c29c276f4fa56c7f2929b1a0" kindref="member">end</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_command_buffer_1a31fe2373d5dd2af4c9b087cc0a6cfd9e" kindref="member">submitToQueue</ref>(<sp/>vk::Queue<sp/>queue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;vk::Semaphore&gt;&amp;<sp/>waitSemaphores<sp/>=<sp/>{<sp/>},<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;vk::Semaphore&gt;&amp;<sp/>signalSemaphores<sp/>=<sp/>{<sp/>},<sp/>vk::PipelineStageFlags*<sp/>waitDstStageMask<sp/>=<sp/>{<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::CommandBuffer&gt;<sp/>m_commandBuffers;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::CommandPool<sp/>m_commandPool;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::CommandBufferBeginInfo<sp/>m_beginInfo;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>COMMAND_BUFFER_HPP</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/buffers/CommandBuffer.hpp"/>
  </compounddef>
</doxygen>
