<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_destructors_8cpp" kind="file" language="C++">
    <compoundname>Destructors.cpp</compoundname>
    <includes refid="_destructors_8hpp" local="yes">Destructors.hpp</includes>
    <includes refid="_components_8hpp" local="yes">Components.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="34">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="20">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/utility/Destructors.cpp</label>
        <link refid="_destructors_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="27">
        <label>map</label>
      </node>
      <node id="32">
        <label>unordered_set</label>
      </node>
      <node id="28">
        <label>fstream</label>
      </node>
      <node id="14">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="3">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="4">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="35">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>array</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>imgui.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="31">
        <label>unordered_map</label>
      </node>
      <node id="33">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="9">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>set</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="22">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="6">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="2">
        <label>Destructors.hpp</label>
        <link refid="_destructors_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevk">vk</innernamespace>
    <innernamespace refid="namespacevk_1_1_destructor">vk::Destructor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_destructors_8hpp" kindref="compound">Destructors.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_components_8hpp" kindref="compound">Components.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespacevk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacevk" kindref="compound">vk</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8" refid="namespacevk_1_1_destructor" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Destructor</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1a46c12507015d6df7f87f6716fe46e6d3" kindref="member">destroyImageView</ref>(<sp/>ImageView<sp/>imageView<sp/>)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>imageView<sp/>)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.destroyImageView(<sp/>imageView<sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1afc10df37412d46c3f4c3f7cd0a29dd3e" kindref="member">destroyImageViews</ref>(<sp/>std::vector&lt;ImageView&gt;&amp;<sp/>imageViews<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>ImageView&amp;<sp/>imageView<sp/>:<sp/>imageViews<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevk_1_1_destructor_1a46c12507015d6df7f87f6716fe46e6d3" kindref="member">destroyImageView</ref>(<sp/>imageView<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1a21d234766c9b854178f254976d4a5870" kindref="member">destroyDescriptorPool</ref>(<sp/>DescriptorPool<sp/>descriptorPool<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>descriptorPool<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.destroyDescriptorPool(<sp/>descriptorPool<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1add6271db1c8f614111490a4ef99df7f5" kindref="member">destroyCommandPool</ref>(<sp/>CommandPool<sp/>commandPool<sp/>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>commandPool<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.destroyCommandPool(<sp/>commandPool<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1ab123720a1617c43040242951e3926fdb" kindref="member">destroyFramebuffer</ref>(<sp/>Framebuffer<sp/>framebuffer<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>framebuffer<sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.destroy(<sp/>framebuffer<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1a75ef11ca474c6b880a1a7402c97010bb" kindref="member">destroyFramebuffers</ref>(<sp/>std::vector&lt;Framebuffer&gt;&amp;<sp/>framebuffers<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Framebuffer&amp;<sp/>framebuffer<sp/>:<sp/>framebuffers<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevk_1_1_destructor_1ab123720a1617c43040242951e3926fdb" kindref="member">destroyFramebuffer</ref>(<sp/>framebuffer<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1a4f3ebd4e129ec4e75985fdc9db62a702" kindref="member">destroyQueryPool</ref>(<sp/>QueryPool<sp/>queryPool<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queryPool<sp/>)<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.destroyQueryPool(<sp/>queryPool<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1ac0d323ecfff997522e7518636e3e0cf3" kindref="member">destroyShaderModule</ref>(<sp/>ShaderModule<sp/>shaderModule<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>shaderModule<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.destroyShaderModule(<sp/>shaderModule<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacevk_1_1_destructor_1a3b09874b6be4c2c906ba1809d91db879" kindref="member">freeMemory</ref>(<sp/>DeviceMemory<sp/>memory<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>memory<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.freeMemory(<sp/>memory<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/utility/Destructors.cpp"/>
  </compounddef>
</doxygen>
