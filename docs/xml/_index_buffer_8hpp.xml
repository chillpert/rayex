<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_index_buffer_8hpp" kind="file" language="C++">
    <compoundname>IndexBuffer.hpp</compoundname>
    <includes refid="_buffer_8hpp" local="yes">Buffer.hpp</includes>
    <includedby refid="_api_8hpp" local="yes">C:/Repos/renderer/src/api/Api.hpp</includedby>
    <includedby refid="_model_8hpp" local="yes">C:/Repos/renderer/src/api/Model.hpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="35">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Buffer.hpp</label>
        <link refid="_buffer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/buffers/IndexBuffer.hpp</label>
        <link refid="_index_buffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="21">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="33">
        <label>unordered_set</label>
      </node>
      <node id="29">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="4">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="5">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="36">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>array</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="22">
        <label>cstdlib</label>
      </node>
      <node id="16">
        <label>imgui.h</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>unordered_map</label>
      </node>
      <node id="34">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="10">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
      <node id="8">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="7">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="12">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Repos/renderer/src/api/Api.cpp</label>
        <link refid="_api_8cpp"/>
      </node>
      <node id="18">
        <label>C:/Repos/renderer/src/api/gui/GuiBase.hpp</label>
        <link refid="_gui_base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/buffers/IndexBuffer.hpp</label>
        <link refid="_index_buffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C:/Repos/renderer/src/api/utility/DebugMessenger.cpp</label>
        <link refid="_debug_messenger_8cpp"/>
      </node>
      <node id="23">
        <label>C:/Repos/renderer/src/api/utility/Helpers.cpp</label>
        <link refid="_helpers_8cpp"/>
      </node>
      <node id="12">
        <label>C:/Repos/renderer/src/api/raytracing/RayTracingBuilder.cpp</label>
        <link refid="_ray_tracing_builder_8cpp"/>
      </node>
      <node id="5">
        <label>C:/Repos/renderer/src/Renderer.hpp</label>
        <link refid="_renderer_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Repos/renderer/src/api/Api.hpp</label>
        <link refid="_api_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>C:/Repos/renderer/src/api/Swapchain.hpp</label>
        <link refid="_swapchain_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>C:/Repos/renderer/src/base/NodeBase.hpp</label>
        <link refid="_node_base_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>C:/Repos/renderer/src/api/gui/GuiBase.cpp</label>
        <link refid="_gui_base_8cpp"/>
      </node>
      <node id="16">
        <label>C:/Repos/renderer/src/api/image/Texture.cpp</label>
        <link refid="_texture_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Repos/renderer/src/api/Model.cpp</label>
        <link refid="_model_8cpp"/>
      </node>
      <node id="21">
        <label>C:/Repos/renderer/src/api/Pipeline.hpp</label>
        <link refid="_pipeline_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>C:/Repos/renderer/src/example/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="10">
        <label>C:/Repos/renderer/src/api/raytracing/RayTracingBuilder.hpp</label>
        <link refid="_ray_tracing_builder_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>C:/Repos/renderer/src/api/Swapchain.cpp</label>
        <link refid="_swapchain_8cpp"/>
      </node>
      <node id="8">
        <label>C:/Repos/renderer/src/api/Model.hpp</label>
        <link refid="_model_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>C:/Repos/renderer/src/base/Base.hpp</label>
        <link refid="_base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>C:/Repos/renderer/src/api/Pipeline.cpp</label>
        <link refid="_pipeline_8cpp"/>
      </node>
      <node id="24">
        <label>C:/Repos/renderer/src/api/utility/Initializers.cpp</label>
        <link refid="_initializers_8cpp"/>
      </node>
      <node id="14">
        <label>C:/Repos/renderer/src/api/buffers/Buffer.cpp</label>
        <link refid="_buffer_8cpp"/>
      </node>
      <node id="13">
        <label>C:/Repos/renderer/src/api/utility/Helpers.hpp</label>
        <link refid="_helpers_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>C:/Repos/renderer/src/api/image/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="7">
        <label>C:/Repos/renderer/src/Renderer.cpp</label>
        <link refid="_renderer_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrx_1_1_index_buffer" prot="public">rx::IndexBuffer</innerclass>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>INDEX_BUFFER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INDEX_BUFFER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_buffer_8hpp" kindref="compound">Buffer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t&gt;</highlight></codeline>
<codeline lineno="9" refid="classrx_1_1_index_buffer" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrx_1_1_index_buffer" kindref="compound">IndexBuffer</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="classrx_1_1_index_buffer_1ad106741acd8effe40a0e230b1738ce92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_index_buffer_1ad106741acd8effe40a0e230b1738ce92" kindref="member">IndexBuffer</ref>(<sp/>)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13" refid="classrx_1_1_index_buffer_1a75ddab28f642c193e17f0f0be004dcd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_index_buffer_1a75ddab28f642c193e17f0f0be004dcd1" kindref="member">IndexBuffer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>indices,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classrx_1_1_index_buffer_1aa4ab087a3d30ae244927f4320cae99f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vk::Buffer<sp/><ref refid="classrx_1_1_index_buffer_1aa4ab087a3d30ae244927f4320cae99f1" kindref="member">get</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_buffer.<ref refid="classrx_1_1_buffer_1a4055ed30a94888249e37f3ea46bf09e9" kindref="member">get</ref>(<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="16" refid="classrx_1_1_index_buffer_1a29bd1d3a64747d7ec3e0961abd4c4373" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classrx_1_1_index_buffer_1a29bd1d3a64747d7ec3e0961abd4c4373" kindref="member">getCount</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_count;<sp/>}</highlight></codeline>
<codeline lineno="17" refid="classrx_1_1_index_buffer_1a498b6ec64a58846b2d81676422e73e15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>vk::IndexType<sp/><ref refid="classrx_1_1_index_buffer_1a498b6ec64a58846b2d81676422e73e15" kindref="member">getType</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_indexType;<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classrx_1_1_index_buffer_1a850e3953992775338162be238347e7f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_index_buffer_1a850e3953992775338162be238347e7f1" kindref="member">init</ref>(<sp/>std::vector&lt;T&gt;&amp;<sp/>indices<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_buffer" kindref="compound">Buffer</ref><sp/>m_buffer;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_count;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::IndexType<sp/>m_indexType;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29" refid="classrx_1_1_index_buffer_1a75ddab28f642c193e17f0f0be004dcd1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_index_buffer_1ad106741acd8effe40a0e230b1738ce92" kindref="member">IndexBuffer&lt;T&gt;::IndexBuffer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>indices,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>initialize<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init(<sp/>indices,<sp/>queueIndices<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="36" refid="classrx_1_1_index_buffer_1a850e3953992775338162be238347e7f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_index_buffer_1a850e3953992775338162be238347e7f1" kindref="member">IndexBuffer&lt;T&gt;::init</ref>(<sp/>std::vector&lt;T&gt;&amp;<sp/>indices<sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_count<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>indices.size(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>T<sp/>)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>uint8_t<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_indexType<sp/>=<sp/>vk::IndexType::eUint8EXT;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>T<sp/>)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>uint16_t<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_indexType<sp/>=<sp/>vk::IndexType::eUint16;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>T<sp/>)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>uint32_t<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_indexType<sp/>=<sp/>vk::IndexType::eUint32;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>data<sp/>type<sp/>for<sp/>index<sp/>buffer<sp/>was<sp/>specified.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::DeviceSize<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>indices[0]<sp/>)<sp/>*<sp/>indices.size(<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::MemoryAllocateFlagsInfo<sp/>allocateFlags(<sp/>vk::MemoryAllocateFlagBitsKHR::eDeviceAddress<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>staging<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_buffer" kindref="compound">Buffer</ref><sp/>stagingBuffer(<sp/>size,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vk::BufferUsageFlagBits::eTransferSrc<sp/>|<sp/>vk::BufferUsageFlagBits::eShaderDeviceAddress,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespacerx_1aecb50d18eceff6c8d47f3c0f0e0ea006" kindref="member">g_transferFamilyIndex</ref><sp/>},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vk::MemoryPropertyFlagBits::eHostVisible<sp/>|<sp/>vk::MemoryPropertyFlagBits::eHostCoherent,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;allocateFlags<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>stagingBuffer.<ref refid="classrx_1_1_buffer_1ae67da1cda37050466a0dda5edca5f0b0" kindref="member">fill</ref>&lt;T&gt;(<sp/>indices.data(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>actual<sp/>index<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_buffer.init(<sp/>size,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vk::BufferUsageFlagBits::eStorageBuffer<sp/>|<sp/>vk::BufferUsageFlagBits::eTransferDst<sp/>|<sp/>vk::BufferUsageFlagBits::eIndexBuffer<sp/>|<sp/>vk::BufferUsageFlagBits::eShaderDeviceAddress,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="namespacerx_1aecb50d18eceff6c8d47f3c0f0e0ea006" kindref="member">g_transferFamilyIndex</ref><sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vk::MemoryPropertyFlagBits::eDeviceLocal,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;allocateFlags<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>staging<sp/>buffer<sp/>to<sp/>the<sp/>actual<sp/>index<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>stagingBuffer.copyToBuffer(<sp/>m_buffer<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>INDEX_BUFFER_HPP</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/buffers/IndexBuffer.hpp"/>
  </compounddef>
</doxygen>
