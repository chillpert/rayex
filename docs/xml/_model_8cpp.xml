<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_model_8cpp" kind="file" language="C++">
    <compoundname>Model.cpp</compoundname>
    <includes refid="_model_8hpp" local="yes">Model.hpp</includes>
    <includes local="no">tiny_obj_loader.h</includes>
    <incdepgraph>
      <node id="36">
        <label>glm/gtx/hash.hpp</label>
      </node>
      <node id="3">
        <label>Texture.hpp</label>
        <link refid="_texture_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>iomanip</label>
      </node>
      <node id="14">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="40">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>IndexBuffer.hpp</label>
        <link refid="_index_buffer_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Buffer.hpp</label>
        <link refid="_buffer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="22">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stdexcept</label>
      </node>
      <node id="19">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="44">
        <label>DescriptorSet.hpp</label>
        <link refid="_descriptor_set_8hpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>UniformBuffer.hpp</label>
        <link refid="_uniform_buffer_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="34">
        <label>unordered_set</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/Model.cpp</label>
        <link refid="_model_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>fstream</label>
      </node>
      <node id="16">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="5">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="46">
        <label>tiny_obj_loader.h</label>
      </node>
      <node id="6">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>optional</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="2">
        <label>Model.hpp</label>
        <link refid="_model_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>array</label>
      </node>
      <node id="20">
        <label>sstream</label>
      </node>
      <node id="45">
        <label>DescriptorSetLayout.hpp</label>
        <link refid="_descriptor_set_layout_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>VertexBuffer.hpp</label>
        <link refid="_vertex_buffer_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cstdlib</label>
      </node>
      <node id="35">
        <label>Vertex.hpp</label>
        <link refid="_vertex_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>imgui.h</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="33">
        <label>unordered_map</label>
      </node>
      <node id="39">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="11">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>set</label>
      </node>
      <node id="28">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>cstring</label>
      </node>
      <node id="9">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="8">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="13">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerx">rx</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_model_8cpp_1af14fac7fbc250522a78849d58d5b0811" prot="public" static="no">
        <name>TINYOBJLOADER_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Model.cpp" line="3" column="9" bodyfile="C:/Repos/renderer/src/api/Model.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_model_8hpp" kindref="compound">Model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYOBJLOADER_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tiny_obj_loader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>uint32_t<sp/>Model::m_modelCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_model_1ad87d69c43348ffa3cc83d231bfd38f2c" kindref="member">Model::Model</ref>(<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index(<sp/>m_modelCounter++<sp/>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>Model::Model(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index(<sp/>m_modelCounter++<sp/>),<sp/>m_path(<sp/>path<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>load(<sp/>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Model::load(<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>tinyobj::attrib_t<sp/>attrib;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;tinyobj::shape_t&gt;<sp/>shapes;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;tinyobj::material_t&gt;<sp/>materials;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>warn,<sp/>err;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!tinyobj::LoadObj(<sp/>&amp;attrib,<sp/>&amp;shapes,<sp/>&amp;materials,<sp/>&amp;warn,<sp/>&amp;err,<sp/>m_path.c_str(<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/>warn<sp/>+<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;Vertex,<sp/>uint32_t&gt;<sp/>uniqueVertices;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shape<sp/>:<sp/>shapes<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>index<sp/>:<sp/>shape.mesh.indices<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertex<sp/>vertex<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.pos<sp/>=</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.vertices[3<sp/>*<sp/>index.vertex_index<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.vertices[3<sp/>*<sp/>index.vertex_index<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.vertices[3<sp/>*<sp/>index.vertex_index<sp/>+<sp/>2]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.normal<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.normals[3<sp/>*<sp/>index.normal_index<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.normals[3<sp/>*<sp/>index.normal_index<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.normals[3<sp/>*<sp/>index.normal_index<sp/>+<sp/>2]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.texCoord<sp/>=</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.texcoords[2<sp/>*<sp/>index.texcoord_index<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f<sp/>-<sp/>attrib.texcoords[2<sp/>*<sp/>index.texcoord_index<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.color<sp/>=<sp/>{<sp/>1.0f,<sp/>1.0f,<sp/>1.0f<sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>uniqueVertices.count(<sp/>vertex<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueVertices[vertex]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_vertices.size(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vertices.push_back(<sp/>vertex<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_indices.push_back(<sp/>uniqueVertices[vertex]<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Model::isLoaded(<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_vertices.size(<sp/>)<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/Model.cpp"/>
  </compounddef>
</doxygen>
