<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_physical_device_8hpp" kind="file" language="C++">
    <compoundname>PhysicalDevice.hpp</compoundname>
    <includes refid="stdafx_8hpp" local="yes">pch/stdafx.hpp</includes>
    <includedby refid="_api_8hpp" local="yes">C:/Repos/renderer/src/api/Api.hpp</includedby>
    <includedby refid="_physical_device_8cpp" local="yes">C:/Repos/renderer/src/api/devices/PhysicalDevice.cpp</includedby>
    <incdepgraph>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="11">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="15">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="19">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="26">
        <label>map</label>
      </node>
      <node id="31">
        <label>unordered_set</label>
      </node>
      <node id="27">
        <label>fstream</label>
      </node>
      <node id="13">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/devices/PhysicalDevice.hpp</label>
        <link refid="_physical_device_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pch/stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="3">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="28">
        <label>array</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="20">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>imgui.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>unordered_map</label>
      </node>
      <node id="12">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="8">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>set</label>
      </node>
      <node id="25">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="29">
        <label>memory</label>
      </node>
      <node id="5">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="10">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Repos/renderer/src/api/Api.cpp</label>
        <link refid="_api_8cpp"/>
      </node>
      <node id="4">
        <label>C:/Repos/renderer/src/api/utility/DebugMessenger.cpp</label>
        <link refid="_debug_messenger_8cpp"/>
      </node>
      <node id="5">
        <label>C:/Repos/renderer/src/Renderer.hpp</label>
        <link refid="_renderer_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Repos/renderer/src/api/Api.hpp</label>
        <link refid="_api_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/devices/PhysicalDevice.hpp</label>
        <link refid="_physical_device_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>C:/Repos/renderer/src/example/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="8">
        <label>C:/Repos/renderer/src/api/devices/PhysicalDevice.cpp</label>
        <link refid="_physical_device_8cpp"/>
      </node>
      <node id="7">
        <label>C:/Repos/renderer/src/Renderer.cpp</label>
        <link refid="_renderer_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrx_1_1_physical_device" prot="public">rx::PhysicalDevice</innerclass>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PHYSICAL_DEVICE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHYSICAL_DEVICE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8hpp" kindref="compound">pch/stdafx.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8" refid="classrx_1_1_physical_device" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrx_1_1_physical_device" kindref="compound">PhysicalDevice</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="classrx_1_1_physical_device_1ae40f1960c85c821b0cfac11a34cabfed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_physical_device_1ae40f1960c85c821b0cfac11a34cabfed" kindref="member">PhysicalDevice</ref>(<sp/>)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>most<sp/>suited<sp/>GPU<sp/>on<sp/>the<sp/>current<sp/>machine.<sp/>If<sp/>a<sp/>device<sp/>is<sp/>found<sp/>its<sp/>properties<sp/>and<sp/>features<sp/>will<sp/>be<sp/>retrieved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>SLI,<sp/>Crossfire<sp/>and<sp/>similar<sp/>is<sp/>NOT<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_physical_device_1a849b1ffaa9fe125d5fc299e8a6e328c6" kindref="member">init</ref>(<sp/>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scores<sp/>a<sp/>given<sp/>physical<sp/>device<sp/>(GPU).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>physicalDevice<sp/>-<sp/>The<sp/>physical<sp/>device<sp/>to<sp/>score.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@return<sp/>-<sp/>Returns<sp/>a<sp/>pair<sp/>consisting<sp/>out<sp/>of<sp/>the<sp/>determined<sp/>score<sp/>and<sp/>the<sp/>name<sp/>of<sp/>the<sp/>physical<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>RTX<sp/>hardware<sp/>surpasses<sp/>any<sp/>other<sp/>GPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;unsigned<sp/>int,<sp/>std::string&gt;<sp/>evaluate(<sp/>vk::PhysicalDevice<sp/>physicalDevice<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>vk::PhysicalDevice<sp/>m_physicalDevice;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>check<sp/>if<sp/>a<sp/>device<sp/>is<sp/>suitable<sp/>for<sp/>the<sp/>application&apos;s<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@param<sp/>physicalDevice<sp/>-<sp/>The<sp/>physical<sp/>device<sp/>to<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@return<sp/>-<sp/>Returns<sp/>the<sp/>GPU&apos;s<sp/>supported<sp/>ray<sp/>tracing<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vk::PhysicalDeviceRayTracingFeaturesKHR<sp/><ref refid="namespacerx_1aeedd24898d685be90044cb18f760dc11" kindref="member">getRayTracingFeatures</ref>(<sp/>vk::PhysicalDevice<sp/>physicalDevice<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PHYSICAL_DEVICE_HPP</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/devices/PhysicalDevice.hpp"/>
  </compounddef>
</doxygen>
