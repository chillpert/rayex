<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_queues_8cpp" kind="file" language="C++">
    <compoundname>Queues.cpp</compoundname>
    <includes refid="_queues_8hpp" local="yes">Queues.hpp</includes>
    <includes refid="_components_8hpp" local="yes">Components.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Repos/renderer/src/api/Queues.cpp</label>
        <link refid="_queues_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="34">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="20">
        <label>cstdint</label>
      </node>
      <node id="25">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="2">
        <label>Queues.hpp</label>
        <link refid="_queues_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>map</label>
      </node>
      <node id="32">
        <label>unordered_set</label>
      </node>
      <node id="28">
        <label>fstream</label>
      </node>
      <node id="14">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="3">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="4">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="35">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>array</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>imgui.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="31">
        <label>unordered_map</label>
      </node>
      <node id="33">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="9">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>set</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="22">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="6">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="11">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_queues_8hpp" kindref="compound">Queues.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_components_8hpp" kindref="compound">Components.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_queues_1ab003c434f6c993f2381b6b0c9dd76003" kindref="member">Queues::init</ref>(<sp/>)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>queueFamilyProperties<sp/>=<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref>.getQueueFamilyProperties(<sp/>);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>queueFamilies(<sp/>queueFamilyProperties.size(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dedicatedTransferQueueFamily<sp/>=<sp/><ref refid="classrx_1_1_queues_1aa0e1ad87d64b7edadf67af40f98d30ce" kindref="member">hasDedicatedTransferQueueFamily</ref>(<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref><sp/>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint32_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>static_cast&lt;<sp/>uint32_t<sp/>&gt;(<sp/>queueFamilies.size(<sp/>)<sp/>);<sp/>++index<sp/>)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queueFamilyProperties[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eGraphics<sp/>&amp;&amp;<sp/>!m_graphicsFamilyIndex.has_value(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref>.getSurfaceSupportKHR(<sp/>index,<sp/><ref refid="namespacerx_1a2e6be14fb5dfecb4f55aaabb40320b90" kindref="member">g_surface</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_graphicsFamilyIndex<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dedicatedTransferQueueFamily<sp/>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/>queueFamilyProperties[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eGraphics<sp/>)<sp/>&amp;&amp;<sp/>!m_transferFamilyIndex.has_value(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFamilyIndex<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queueFamilyProperties[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eTransfer<sp/>&amp;&amp;<sp/>!m_transferFamilyIndex.has_value(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFamilyIndex<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1a293d2cff449b4f7a9a818139ac804c24" kindref="member">g_graphicsFamilyIndex</ref><sp/>=<sp/>m_graphicsFamilyIndex.value(<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1aecb50d18eceff6c8d47f3c0f0e0ea006" kindref="member">g_transferFamilyIndex</ref><sp/>=<sp/>m_transferFamilyIndex.value(<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_queues_1a3262a78b46dd3d20f720c256beee4c68" kindref="member">Queues::retrieveHandles</ref>(<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_graphicsFamilyIndex.has_value(<sp/>)<sp/>||<sp/>!m_transferFamilyIndex.has_value(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>queue<sp/>handles.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.getQueue(<sp/>m_graphicsFamilyIndex.value(<sp/>),<sp/>0,<sp/>&amp;<ref refid="namespacerx_1af6e9ac110b43e325c90fa487e80cd7cc" kindref="member">g_graphicsQueue</ref><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1af79af13d89e6750c84e1abba095f111d" kindref="member">g_device</ref>.getQueue(<sp/>m_transferFamilyIndex.value(<sp/>),<sp/>0,<sp/>&amp;<ref refid="namespacerx_1a1368884f2e836d2d000898052c5fd912" kindref="member">g_transferQueue</ref><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_queues_1a6de73934bd1ec9973de8caddfe897077" kindref="member">Queues::isComplete</ref>(<sp/>vk::PhysicalDevice<sp/>physicalDevice<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>queueFamilies<sp/>=<sp/>physicalDevice.getQueueFamilyProperties(<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>queueFamilyIndicesCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>queueFamilies.size(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>all<sp/>possible<sp/>queue<sp/>family<sp/>indices<sp/>with<sp/>transfer<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>graphicsQueueFamilyIndices;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>transferQueueFamilyIndices;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>computeQueueFamilyIndices;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint32_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>queueFamilyIndicesCount;<sp/>++index<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>current<sp/>queue<sp/>family<sp/>index<sp/>contains<sp/>at<sp/>least<sp/>one<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queueFamilies[index].queueCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queueFamilies[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eGraphics<sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicalDevice.getSurfaceSupportKHR(<sp/>index,<sp/><ref refid="namespacerx_1a2e6be14fb5dfecb4f55aaabb40320b90" kindref="member">g_surface</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphicsQueueFamilyIndices.push_back(<sp/>index<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queueFamilies[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eTransfer<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transferQueueFamilyIndices.push_back(<sp/>index<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queueFamilies[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eCompute<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeQueueFamilyIndices.push_back(<sp/>index<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>graphicsQueueFamilyIndices.size(<sp/>)<sp/>==<sp/>0<sp/>||<sp/>computeQueueFamilyIndices.size(<sp/>)<sp/>==<sp/>0<sp/>||<sp/>transferQueueFamilyIndices.size(<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_queues_1aa0e1ad87d64b7edadf67af40f98d30ce" kindref="member">Queues::hasDedicatedTransferQueueFamily</ref>(<sp/>vk::PhysicalDevice<sp/>physicalDevice<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>queueFamilyProperties<sp/>=<sp/>physicalDevice.getQueueFamilyProperties(<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint32_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>static_cast&lt;<sp/>uint32_t<sp/>&gt;(<sp/>queueFamilyProperties.size(<sp/>)<sp/>);<sp/>++index<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/>queueFamilyProperties[index].queueFlags<sp/>&amp;<sp/>vk::QueueFlagBits::eGraphics<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/Queues.cpp"/>
  </compounddef>
</doxygen>
