<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>RAYEXEC</highlight></codeline>
<codeline><highlight class="normal">RAYEXEC<sp/>is<sp/>a<sp/>work-in-progress<sp/>cross-platform<sp/>Vulkan-based<sp/>path<sp/>tracing<sp/>rendering<sp/>library.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>runs<sp/>on<sp/>both<sp/>Linux<sp/>(x64)<sp/>and<sp/>Windows<sp/>(x64)<sp/>using<sp/>the<sp/>Vulkan<sp/>API.<sp/>The<sp/>purpose<sp/>of<sp/>this<sp/>software<sp/>is<sp/>to<sp/>provide<sp/>a<sp/>cross-platform<sp/>renderer<sp/>with<sp/>path<sp/>tracing<sp/>capabilities<sp/>that<sp/>is<sp/>easy<sp/>to<sp/>integrate<sp/>into<sp/>existing<sp/>projects.<sp/>It<sp/>uses<sp/>SDL2<sp/>for<sp/>windowing<sp/>and<sp/>GLM<sp/>as<sp/>its<sp/>maths<sp/>library.<sp/>RAYEXEC<sp/>features<sp/>native<sp/>[Dear<sp/>ImGui](https://github.com/ocornut/imgui)<sp/>support.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Requirements</highlight></codeline>
<codeline><highlight class="normal">NVIDIA<sp/>Vulkan<sp/>Beta<sp/>Drivers<sp/>[[Download]](https://developer.nvidia.com/vulkan-driver)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Deploy</highlight></codeline>
<codeline><highlight class="normal">To<sp/>integrate<sp/>RAYEXEC<sp/>in<sp/>your<sp/>existing<sp/>C++<sp/>/<sp/>CMake<sp/>project,<sp/>follow<sp/>the<sp/>steps<sp/>below.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>Download<sp/>the<sp/>latest<sp/>[release](https://github.com/chillpert/rayexec).</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>Place<sp/>the<sp/>**shared<sp/>library<sp/>objects**<sp/>and<sp/>the<sp/>provided<sp/>**include<sp/>folder**<sp/>somewhere<sp/>inside<sp/>your<sp/>project.</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>Include<sp/>the<sp/>CMakeLists.txt<sp/>inside<sp/>the<sp/>**include<sp/>folder**<sp/>to<sp/>your<sp/>CMakeLists.txt</highlight></codeline>
<codeline><highlight class="normal">4.<sp/>Link<sp/>your<sp/>target<sp/>against<sp/>the<sp/>**shared<sp/>library<sp/>objects**<sp/>and<sp/>against<sp/>SDL2<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Using<sp/>CMake<sp/>is<sp/>not<sp/>obligatory<sp/>but<sp/>recommended<sp/>as<sp/>RAYEXEC<sp/>comes<sp/>with<sp/>its<sp/>own<sp/>CMakeLists.txt<sp/>that<sp/>will<sp/>properly<sp/>include<sp/>all<sp/>project<sp/>headers.<sp/>A<sp/>release<sp/>also<sp/>comes<sp/>with<sp/>a<sp/>fully<sp/>functional<sp/>example<sp/>including<sp/>a<sp/>complete<sp/>CMakeLists.txt<sp/>that<sp/>can<sp/>be<sp/>used<sp/>as<sp/>reference.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Build</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Linux</highlight></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>entire<sp/>library<sp/>yourself<sp/>follow<sp/>the<sp/>steps<sp/>below.<sp/></highlight></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>to<sp/>build<sp/>the<sp/>provided<sp/>example,<sp/>make<sp/>sure<sp/>to<sp/>enable<sp/>the<sp/>RX_BUILD_EXAMPLES<sp/>build<sp/>option<sp/>in<sp/>CMake.</highlight></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>git<sp/>clone<sp/>https://github.com/chillpert/rayexec</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cd<sp/>renderer<sp/></highlight></codeline>
<codeline><highlight class="normal">$<sp/>mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">$<sp/>make<sp/>all</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Execute<sp/>the<sp/>example.<sp/>Depending<sp/>on<sp/>the<sp/>build<sp/>type<sp/>you<sp/>want<sp/>to<sp/>choose,<sp/>replace<sp/>[buildtype].</highlight></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>./bin/[buildtype]/example</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Windows</highlight></codeline>
<codeline><highlight class="normal">Generate<sp/>a<sp/>Visual<sp/>Studio<sp/>solution<sp/>using<sp/>CMake.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Usage</highlight></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>cope<sp/>snippet<sp/>shows<sp/>the<sp/>most<sp/>minimal<sp/>example<sp/>possible.<sp/>Nothing<sp/>will<sp/>be<sp/>rendered.<sp/>For<sp/>a<sp/>proper<sp/>example<sp/>take<sp/>a<sp/>look<sp/>at<sp/>the<sp/>**documentation**<sp/>or<sp/>at<sp/>**example/example.cpp**.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;RayExec.hpp&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main(<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>RayExec<sp/>renderer;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>renderer.init(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(<sp/>renderer.isRunning(<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.run(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Download</highlight></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>find<sp/>the<sp/>GitHub<sp/>repository<sp/>[here](https://github.com/chillpert/rayexec).</highlight></codeline>
    </programlisting>
    <location file="/home/n30/Repos/rayexec/README.md"/>
  </compounddef>
</doxygen>
