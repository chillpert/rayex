<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>RAYEX</highlight></codeline>
<codeline><highlight class="normal">RAYEX<sp/>is<sp/>a<sp/>work-in-progress,<sp/>cross-platform,<sp/>cross-vendor,<sp/>Vulkan-based,<sp/>real-time<sp/>path<sp/>tracer.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>runs<sp/>on<sp/>both<sp/>Linux<sp/>(x64)<sp/>and<sp/>Windows<sp/>(x64)<sp/>using<sp/>the<sp/>Vulkan<sp/>API.<sp/>This<sp/>software<sp/>aims<sp/>to<sp/>provide<sp/>a<sp/>cross-platform,<sp/>cross-vendor<sp/>path<sp/>tracer<sp/>that<sp/>is<sp/>easy<sp/>to<sp/>integrate<sp/>into<sp/>existing<sp/>projects.<sp/>Vendor<sp/>independence<sp/>is<sp/>achieved<sp/>by<sp/>using<sp/>the<sp/>new<sp/>KHRONOS<sp/>Vulkan<sp/>ray<sp/>tracing<sp/>extension<sp/>(first<sp/>published<sp/>on<sp/>March<sp/>17,<sp/>2020,<sp/>as<sp/>an<sp/>experimental<sp/>version).<sp/>It<sp/>uses<sp/>[SDL2](https://www.libsdl.org/index.php)<sp/>for<sp/>windowing<sp/>and<sp/>[glm](https://glm.g-truc.net/0.9.9/index.html)<sp/>as<sp/>its<sp/>math<sp/>library.<sp/>RAYEX<sp/>features<sp/>native<sp/>[Dear<sp/>ImGui](https://github.com/ocornut/imgui)<sp/>support,<sp/>enabling<sp/>the<sp/>user<sp/>to<sp/>create<sp/>user<sp/>interfaces<sp/>without<sp/>writing<sp/>any<sp/>API-related<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Requirements</highlight></codeline>
<codeline><highlight class="normal">Unfortunately,<sp/>the<sp/>KHRONOS<sp/>Vulkan<sp/>ray<sp/>tracing<sp/>extension<sp/>is<sp/>not<sp/>yet<sp/>part<sp/>of<sp/>the<sp/>NVIDIA<sp/>main<sp/>driver.<sp/>Download<sp/>the<sp/>NVIDIA<sp/>Vulkan<sp/>beta<sp/>drivers<sp/>[here](https://developer.nvidia.com/vulkan-driver).<sp/></highlight></codeline>
<codeline><highlight class="normal">AMD<sp/>drivers<sp/>can<sp/>be<sp/>downloaded<sp/>[here](https://www.amd.com/en/support/kb/release-notes/rn-rad-win-20-11-2-vrt-beta)<sp/>instead.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Deploy</highlight></codeline>
<codeline><highlight class="normal">To<sp/>integrate<sp/>RAYEX<sp/>in<sp/>an<sp/>existing<sp/>C++<sp/>/<sp/>CMake<sp/>project,<sp/>please<sp/>follow<sp/>the<sp/>steps<sp/>below.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>Download<sp/>the<sp/>latest<sp/>[release](https://github.com/chillpert/rayex)<sp/>or<sp/>build<sp/>the<sp/>library<sp/>yourself.</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>Place<sp/>the<sp/>**shared<sp/>library<sp/>objects**,<sp/>and<sp/>the<sp/>provided<sp/>**include<sp/>folder**<sp/>somewhere<sp/>inside<sp/>your<sp/>project.</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>Include<sp/>the<sp/>CMakeLists.txt<sp/>inside<sp/>the<sp/>**include<sp/>folder**<sp/>to<sp/>your<sp/>CMakeLists.txt.</highlight></codeline>
<codeline><highlight class="normal">4.<sp/>Link<sp/>your<sp/>target<sp/>against<sp/>the<sp/>**shared<sp/>library<sp/>objects**<sp/>and<sp/>against<sp/>SDL2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Using<sp/>CMake<sp/>is<sp/>not<sp/>obligatory<sp/>but<sp/>recommended<sp/>as<sp/>RAYEX<sp/>comes<sp/>with<sp/>its<sp/>own<sp/>CMakeLists.txt<sp/>that<sp/>will<sp/>properly<sp/>include<sp/>all<sp/>project<sp/>headers.<sp/>A<sp/>release<sp/>also<sp/>comes<sp/>with<sp/>a<sp/>fully<sp/>functional<sp/>example,<sp/>including<sp/>a<sp/>complete<sp/>CMakeLists.txt<sp/>that<sp/>can<sp/>be<sp/>used<sp/>for<sp/>reference.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Build</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Linux</highlight></codeline>
<codeline><highlight class="normal">To<sp/>build<sp/>the<sp/>entire<sp/>library<sp/>yourself<sp/>follow<sp/>the<sp/>steps<sp/>below.<sp/></highlight></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>to<sp/>build<sp/>the<sp/>provided<sp/>example,<sp/>make<sp/>sure<sp/>to<sp/>enable<sp/>the<sp/>RX_BUILD_EXAMPLES<sp/>build<sp/>option<sp/>in<sp/>CMake.</highlight></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>git<sp/>clone<sp/>https://github.com/chillpert/rayex</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cd<sp/>renderer<sp/></highlight></codeline>
<codeline><highlight class="normal">$<sp/>mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">$<sp/>make<sp/>all</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Execute<sp/>the<sp/>example.<sp/>Depending<sp/>on<sp/>the<sp/>build<sp/>type<sp/>you<sp/>want<sp/>to<sp/>choose,<sp/>replace<sp/>[buildtype].</highlight></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>./bin/[buildtype]/example</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Windows</highlight></codeline>
<codeline><highlight class="normal">Generate<sp/>a<sp/>Visual<sp/>Studio<sp/>2019<sp/>solution<sp/>using<sp/>CMake<sp/>and<sp/>build<sp/>it<sp/>or<sp/>open<sp/>the<sp/>project<sp/>folder<sp/>using<sp/>Visual<sp/>Studio<sp/>2019,<sp/>confirm<sp/>the<sp/>prompt<sp/>to<sp/>generate<sp/>the<sp/>CMake<sp/>cache,<sp/>and<sp/>build<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Usage</highlight></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>cope<sp/>snippet<sp/>renders<sp/>a<sp/>cube.<sp/>For<sp/>a<sp/>proper<sp/>example,<sp/>take<sp/>a<sp/>look<sp/>at<sp/>the<sp/>**documentation**<sp/>or<sp/>**example/example.cpp**.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Rayex.hpp&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main(<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Initialize<sp/>the<sp/>renderer.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rx::Rayex<sp/>renderer;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>renderer.init(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Load<sp/>some<sp/>geometry<sp/>and<sp/>submit<sp/>it<sp/>to<sp/>RAYEX.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>cube<sp/><sp/><sp/>=<sp/>rx::loadObj(<sp/>&quot;models/cube.obj&quot;<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>renderer.scene(<sp/>).submitGeometry(<sp/>cube<sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>geometry<sp/>from<sp/>above<sp/>and<sp/>submit<sp/>it<sp/>for<sp/>rendering.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>cubeInstance<sp/>=<sp/>rx::instance(<sp/>cube<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>renderer.scene(<sp/>).submitGeometryInstance(<sp/>cubeInstance<sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>main<sp/>loop.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(<sp/>renderer.isRunning(<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.run(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Issues</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[x]<sp/>Update<sp/>to<sp/>latest<sp/>SDK<sp/>and<sp/>official<sp/>release<sp/>version<sp/>of<sp/>VK_RAY_TRACING_KHR</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Remove<sp/>unnecessary<sp/>documentation<sp/>and<sp/>add<sp/>missing<sp/>documentation</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Fix<sp/>upload<sp/>storage<sp/>buffers<sp/>to<sp/>GPU<sp/>issues</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Fix<sp/>any<sp/>hit<sp/>shader</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Fix<sp/>reflection<sp/>issue<sp/>in<sp/>Cornell<sp/>box<sp/>scene</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Clean<sp/>up<sp/>Vulkan-related<sp/>functions<sp/>and<sp/>classes</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Outsource<sp/>any<sp/>ray<sp/>tracing-related<sp/>code<sp/>from<sp/>most<sp/>Vulkan-related<sp/>functions<sp/>and<sp/>classes</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Move<sp/>all<sp/>Vulkan-related<sp/>functions<sp/>and<sp/>classes<sp/>into<sp/>their<sp/>own<sp/>folder<sp/>and<sp/>namespace</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Proper<sp/>documentation<sp/>and<sp/>README<sp/>grammar<sp/>check</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Planned<sp/>Features</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[x]<sp/>Add<sp/>environment<sp/>mapping</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[x]<sp/>Add<sp/>a<sp/>post<sp/>processing<sp/>pass<sp/>for<sp/>gamma<sp/>correction<sp/>and<sp/>future<sp/>post<sp/>processing<sp/>effects</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[x]<sp/>Add<sp/>simple<sp/>reflections<sp/>and<sp/>transparency</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>an<sp/>efficient<sp/>way<sp/>of<sp/>building<sp/>and<sp/>updating<sp/>acceleration<sp/>structures<sp/>based<sp/>on<sp/>a<sp/>scene&apos;s<sp/>requirements</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>importance<sp/>and<sp/>multiple<sp/>importance<sp/>sampling</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>HDR<sp/>skymaps<sp/>and<sp/>skyboxes<sp/>as<sp/>light<sp/>sources</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>more<sp/>material<sp/>properties</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>denoising</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>callable<sp/>shader<sp/>support</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>bidirectional<sp/>and<sp/>volumetric<sp/>path<sp/>tracing</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>further<sp/>post<sp/>processing<sp/>features</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Documentation</highlight></codeline>
<codeline><highlight class="normal">Extensive<sp/>documentation<sp/>of<sp/>all<sp/>classes<sp/>and<sp/>functions<sp/>can<sp/>be<sp/>found<sp/>[here](https://chillpert.github.io/rayex/html/index.html).</highlight></codeline>
    </programlisting>
    <location file="/mnt/c/Repos/rayex/README.md"/>
  </compounddef>
</doxygen>
