<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_renderer_8cpp" kind="file" language="C++">
    <compoundname>Renderer.cpp</compoundname>
    <includes refid="_renderer_8hpp" local="yes">Renderer.hpp</includes>
    <includes local="no">filesystem</includes>
    <incdepgraph>
      <node id="49">
        <label>glm/gtx/hash.hpp</label>
      </node>
      <node id="47">
        <label>Texture.hpp</label>
        <link refid="_texture_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iomanip</label>
      </node>
      <node id="15">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="60">
        <label>GuiBase.hpp</label>
        <link refid="_gui_base_8hpp"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>filesystem</label>
      </node>
      <node id="52">
        <label>IndexBuffer.hpp</label>
        <link refid="_index_buffer_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>Buffer.hpp</label>
        <link refid="_buffer_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="23">
        <label>cstdint</label>
      </node>
      <node id="42">
        <label>Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>RenderPass.hpp</label>
        <link refid="_render_pass_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Renderer.hpp</label>
        <link refid="_renderer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stdexcept</label>
      </node>
      <node id="20">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="54">
        <label>DescriptorSet.hpp</label>
        <link refid="_descriptor_set_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Api.hpp</label>
        <link refid="_api_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Swapchain.hpp</label>
        <link refid="_swapchain_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Queues.hpp</label>
        <link refid="_queues_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>UniformBuffer.hpp</label>
        <link refid="_uniform_buffer_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>NodeBase.hpp</label>
        <link refid="_node_base_8hpp"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>map</label>
      </node>
      <node id="58">
        <label>Device.hpp</label>
        <link refid="_device_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>AccelerationStructure.hpp</label>
        <link refid="_acceleration_structure_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>unordered_set</label>
      </node>
      <node id="37">
        <label>DebugMessenger.hpp</label>
        <link refid="_debug_messenger_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>fstream</label>
      </node>
      <node id="17">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="40">
        <label>Pipeline.hpp</label>
        <link refid="_pipeline_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>PhysicalDevice.hpp</label>
        <link refid="_physical_device_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Instance.hpp</label>
        <link refid="_instance_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>RayTracingBuilder.hpp</label>
        <link refid="_ray_tracing_builder_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="7">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>optional</label>
      </node>
      <node id="59">
        <label>CommandBuffer.hpp</label>
        <link refid="_command_buffer_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="46">
        <label>Model.hpp</label>
        <link refid="_model_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Base.hpp</label>
        <link refid="_base_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>array</label>
      </node>
      <node id="21">
        <label>sstream</label>
      </node>
      <node id="55">
        <label>DescriptorSetLayout.hpp</label>
        <link refid="_descriptor_set_layout_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>VertexBuffer.hpp</label>
        <link refid="_vertex_buffer_8hpp"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cstdlib</label>
      </node>
      <node id="48">
        <label>Vertex.hpp</label>
        <link refid="_vertex_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>imgui.h</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>unordered_map</label>
      </node>
      <node id="45">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="43">
        <label>Helpers.hpp</label>
        <link refid="_helpers_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>set</label>
      </node>
      <node id="29">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>cstring</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/Renderer.cpp</label>
        <link refid="_renderer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="33">
        <label>memory</label>
      </node>
      <node id="9">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="39">
        <label>Surface.hpp</label>
        <link refid="_surface_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_renderer_8hpp" kindref="compound">Renderer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_renderer_1adac272ae85ea19cc6ce17c93e4fbb5b5" kindref="member">Renderer::Renderer</ref>(<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window(<sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;WindowBase&gt;(<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>m_camera(<sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;CameraBase&gt;(<sp/>m_window-&gt;getWidth(<sp/>),<sp/>m_window-&gt;getHeight(<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api(<sp/>m_window,<sp/>m_camera<sp/>),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>m_initialized(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>m_running(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>Renderer::Renderer(<sp/>std::shared_ptr&lt;CameraBase&gt;<sp/>camera<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window(<sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;WindowBase&gt;(<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>m_camera(<sp/>camera<sp/>),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api(<sp/>m_window,<sp/>m_camera<sp/>),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>m_initialized(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>m_running(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>Renderer::Renderer(<sp/>std::shared_ptr&lt;WindowBase&gt;<sp/>window<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window(<sp/>window<sp/>),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_camera(<sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;CameraBase&gt;(<sp/>m_window-&gt;getWidth(<sp/>),<sp/>m_window-&gt;getHeight(<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api(<sp/>window,<sp/>m_camera<sp/>),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>m_initialized(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>m_running(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>Renderer::Renderer(<sp/>std::shared_ptr&lt;WindowBase&gt;<sp/>window,<sp/>std::shared_ptr&lt;CameraBase&gt;<sp/>camera<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window(<sp/>window<sp/>),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>m_camera(<sp/>camera<sp/>),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api(<sp/>m_window,<sp/>m_camera<sp/>),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>m_initialized(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_running(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Renderer::init(<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1a125bfd0bedca67d2df1c1cc90d63df48" kindref="member">g_window</ref><sp/>=<sp/>m_window;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_initialized<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>RX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::copy(<sp/>RX_RESOURCES_PATH<sp/></highlight><highlight class="stringliteral">&quot;shaders&quot;</highlight><highlight class="normal">,<sp/>RX_PATH_TO_LIBRARY<sp/></highlight><highlight class="stringliteral">&quot;shaders&quot;</highlight><highlight class="normal">,<sp/>std::filesystem::copy_options::overwrite_existing<sp/>|<sp/>std::filesystem::copy_options::recursive<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::copy(<sp/>RX_RESOURCES_PATH<sp/></highlight><highlight class="stringliteral">&quot;models&quot;</highlight><highlight class="normal">,<sp/>RX_PATH_TO_LIBRARY<sp/></highlight><highlight class="stringliteral">&quot;models&quot;</highlight><highlight class="normal">,<sp/>std::filesystem::copy_options::overwrite_existing<sp/>|<sp/>std::filesystem::copy_options::recursive<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::copy(<sp/>RX_RESOURCES_PATH<sp/></highlight><highlight class="stringliteral">&quot;textures&quot;</highlight><highlight class="normal">,<sp/>RX_PATH_TO_LIBRARY<sp/></highlight><highlight class="stringliteral">&quot;textures&quot;</highlight><highlight class="normal">,<sp/>std::filesystem::copy_options::overwrite_existing<sp/>|<sp/>std::filesystem::copy_options::recursive<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window-&gt;init(<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api.init(<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Renderer::run(<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_running<sp/>||<sp/>!m_initialized<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>m_running<sp/>=<sp/>m_window-&gt;update(<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>m_camera-&gt;update(<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_running<sp/>||<sp/>!m_initialized<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api.render(<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>m_api.update(<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Renderer::setCamera(<sp/>std::shared_ptr&lt;CameraBase&gt;<sp/>camera<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>m_camera<sp/>=<sp/>camera;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Renderer::setGui(<sp/>std::shared_ptr&lt;GuiBase&gt;<sp/>gui<sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>m_initialized<sp/>?<sp/>m_api.setGui(<sp/>gui,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>:<sp/>m_api.setGui(<sp/>gui<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/Renderer.cpp"/>
  </compounddef>
</doxygen>
