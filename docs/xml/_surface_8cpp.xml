<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_surface_8cpp" kind="file" language="C++">
    <compoundname>Surface.cpp</compoundname>
    <includes refid="_surface_8hpp" local="yes">Surface.hpp</includes>
    <includes refid="_components_8hpp" local="yes">Components.hpp</includes>
    <incdepgraph>
      <node id="20">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="3">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="21">
        <label>cstdint</label>
      </node>
      <node id="26">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/api/Surface.cpp</label>
        <link refid="_surface_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="33">
        <label>unordered_set</label>
      </node>
      <node id="29">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="4">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="5">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="34">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>array</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="22">
        <label>cstdlib</label>
      </node>
      <node id="16">
        <label>imgui.h</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>unordered_map</label>
      </node>
      <node id="35">
        <label>Components.hpp</label>
        <link refid="_components_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="10">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
      <node id="8">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="7">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="2">
        <label>Surface.hpp</label>
        <link refid="_surface_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_surface_8hpp" kindref="compound">Surface.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_components_8hpp" kindref="compound">Components.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_surface_1ad86d611078859429baa02b61fa8b80e5" kindref="member">Surface::Surface</ref>(<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>m_format(<sp/><ref refid="namespacevk" kindref="compound">vk</ref>::Format::eB8G8R8A8Unorm<sp/>),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>m_colorSpace(<sp/><ref refid="namespacevk" kindref="compound">vk</ref>::ColorSpaceKHR::eSrgbNonlinear<sp/>),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>m_presentMode(<sp/><ref refid="namespacevk" kindref="compound">vk</ref>::PresentModeKHR::eMailbox<sp/>),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>m_capabilities(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_surface_1ad86d611078859429baa02b61fa8b80e5" kindref="member">Surface::Surface</ref>(<sp/>vk::Format<sp/>format,<sp/>vk::ColorSpaceKHR<sp/>colorSpace,<sp/>vk::PresentModeKHR<sp/>presentMode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>m_format(<sp/><ref refid="namespacevk" kindref="compound">vk</ref>::Format::eB8G8R8A8Unorm<sp/>),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>m_colorSpace(<sp/><ref refid="namespacevk" kindref="compound">vk</ref>::ColorSpaceKHR::eSrgbNonlinear<sp/>),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>m_presentMode(<sp/><ref refid="namespacevk" kindref="compound">vk</ref>::PresentModeKHR::eMailbox<sp/>),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>m_capabilities(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>initialize<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_render_pass_1ac08ed715e8dbc8bb7ef5d0b108b2e93c" kindref="member">init</ref>(<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_surface_1aee862bb3e7ca8bac54d1c3e042bc09e4" kindref="member">Surface::~Surface</ref>(<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>destroy(<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_surface_1a76b3c2a398b71c3455eea9f82a60ce75" kindref="member">Surface::init</ref>(<sp/>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>m_surface<sp/>=<sp/><ref refid="namespacerx_1a125bfd0bedca67d2df1c1cc90d63df48" kindref="member">g_window</ref>-&gt;createSurface(<sp/><ref refid="namespacerx_1a2a6631357a4950ac30f9491c53b249f2" kindref="member">g_instance</ref><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1a2e6be14fb5dfecb4f55aaabb40320b90" kindref="member">g_surface</ref><sp/>=<sp/>m_surface;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_surface<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>surface.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_surface_1a484056000f32d20351f88b9641aa5989" kindref="member">Surface::checkSettingSupport</ref>(<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>all<sp/>surface<sp/>capabilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_capabilities<sp/>=<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref>.getSurfaceCapabilitiesKHR(<sp/>m_surface<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>a<sp/>present<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::PresentModeKHR&gt;<sp/>presentModes<sp/>=<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref>.getSurfacePresentModesKHR(<sp/>m_surface<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mode<sp/>:<sp/>presentModes<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>==<sp/>vk::PresentModeKHR::eMailbox<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_presentMode<sp/>=<sp/>vk::PresentModeKHR::eMailbox;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back,<sp/>as<sp/>FIFO<sp/>is<sp/>always<sp/>supported<sp/>on<sp/>every<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_presentMode<sp/>=<sp/>vk::PresentModeKHR::eFifo;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>format<sp/>and<sp/>color<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>formatProperties<sp/>=<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref>.getFormatProperties(<sp/>m_format<sp/>);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>not<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surfaceFormats<sp/>=<sp/><ref refid="namespacerx_1a3bba8e931280440c523b5e01abca7a66" kindref="member">g_physicalDevice</ref>.getSurfaceFormatsKHR(<sp/>m_surface<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>accepted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iter<sp/>:<sp/>surfaceFormats<sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iter.format<sp/>==<sp/>m_format<sp/>&amp;&amp;<sp/>iter.colorSpace<sp/>==<sp/>m_colorSpace<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accepted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>prefered<sp/>format<sp/>and<sp/>color<sp/>space<sp/>are<sp/>not<sp/>available,<sp/>fall<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!accepted<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_format<sp/>=<sp/>surfaceFormats[0].format;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_colorSpace<sp/>=<sp/>surfaceFormats[0].colorSpace;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerx_1a383c91796e541f9c2638655c6795d1a6" kindref="member">g_surfaceFormat</ref><sp/>=<sp/>m_format;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Surface::destroy(<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_surface<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerx_1a2a6631357a4950ac30f9491c53b249f2" kindref="member">g_instance</ref>.destroySurfaceKHR(<sp/>m_surface<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_surface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/api/Surface.cpp"/>
  </compounddef>
</doxygen>
