<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="_window_base_8cpp" kind="file" language="C++">
    <compoundname>WindowBase.cpp</compoundname>
    <includes refid="_window_base_8hpp" local="yes">WindowBase.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>glm/ext/matrix_transform.hpp</label>
      </node>
      <node id="2">
        <label>WindowBase.hpp</label>
        <link refid="_window_base_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>imgui_impl_sdl.h</label>
      </node>
      <node id="20">
        <label>cstdint</label>
      </node>
      <node id="25">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>imgui_impl_vulkan.h</label>
      </node>
      <node id="27">
        <label>map</label>
      </node>
      <node id="32">
        <label>unordered_set</label>
      </node>
      <node id="1">
        <label>C:/Repos/renderer/src/window/WindowBase.cpp</label>
        <link refid="_window_base_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>fstream</label>
      </node>
      <node id="14">
        <label>glm/gtx/string_cast.hpp</label>
      </node>
      <node id="3">
        <label>stdafx.hpp</label>
        <link refid="stdafx_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="4">
        <label>Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>optional</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="33">
        <label>CameraBase.hpp</label>
        <link refid="_camera_base_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>array</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>imgui.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="31">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>glm/ext/matrix_clip_space.hpp</label>
      </node>
      <node id="9">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>set</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="22">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="6">
        <label>SDL2/SDL_vulkan.h</label>
      </node>
      <node id="11">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerx">rx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_window_base_8hpp" kindref="compound">WindowBase.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerx" kindref="compound">rx</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_window_base_1a4c75fcc5018535133aa56a897ef8d385" kindref="member">WindowBase::WindowBase</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title,<sp/>uint32_t<sp/>flags<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>m_window(<sp/>nullptr<sp/>),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>m_width(<sp/>width<sp/>),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>m_height(<sp/>height<sp/>),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>m_title(<sp/>title<sp/>),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>m_flags(<sp/>flags<sp/>)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>m_flags<sp/>|=<sp/>SDL_WINDOW_VULKAN;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="classrx_1_1_window_base_1ab2bac026a58aa4fdf3b809bfbe364014" kindref="member">WindowBase::~WindowBase</ref>(<sp/>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1aa50e9ee4e58b6a36340180290d0c99d5" kindref="member">clean</ref>(<sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_window_base_1a3383242489b5e86c58efbf3f7a653fd5" kindref="member">WindowBase::init</ref>(<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetHint(<sp/>SDL_HINT_FRAMEBUFFER_ACCELERATION,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SDL_Init(<sp/>SDL_INIT_VIDEO<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/>SDL_GetError(<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref><sp/>=<sp/>SDL_CreateWindow(<sp/><ref refid="classrx_1_1_window_base_1a98ab6f3869a247eebc6ac3c02eee034f" kindref="member">m_title</ref>,<sp/>SDL_WINDOWPOS_CENTERED,<sp/>SDL_WINDOWPOS_CENTERED,<sp/><ref refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" kindref="member">m_width</ref>,<sp/><ref refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" kindref="member">m_height</ref>,<sp/><ref refid="classrx_1_1_window_base_1a717f1fc684aa4c1d5773e10b66fe6f6f" kindref="member">m_flags</ref><sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>window.&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_window_base_1a7d169824a215063c9574568b6e6fecba" kindref="member">WindowBase::update</ref>(<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>local<sp/>timer<sp/>bound<sp/>to<sp/>this<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1a70eb7bea377c3a7c5dbb3f5c67a51fe3" kindref="member">m_time</ref>.<ref refid="classrx_1_1_time_1a880ebf2a4c7b73014969a3f97def442a" kindref="member">update</ref>(<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>the<sp/>latest<sp/>window<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetWindowSize(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref>,<sp/>&amp;width,<sp/>&amp;height<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1a6313eb78b5d688f3e3997c5163e9ac69" kindref="member">resize</ref>(<sp/>width,<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_window_base_1aa50e9ee4e58b6a36340180290d0c99d5" kindref="member">WindowBase::clean</ref>(<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_DestroyWindow(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Quit(<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_window_base_1a6313eb78b5d688f3e3997c5163e9ac69" kindref="member">WindowBase::resize</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" kindref="member">m_width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" kindref="member">m_height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_SetWindowSize(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref>,<sp/><ref refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" kindref="member">m_width</ref>,<sp/><ref refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" kindref="member">m_height</ref><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>char*&gt;<sp/><ref refid="classrx_1_1_window_base_1a4c965865eadbec64d88bdb0de3a9fbaf" kindref="member">WindowBase::getInstanceExtensions</ref>(<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sdlExtensionsCount;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_bool<sp/>result<sp/>=<sp/>SDL_Vulkan_GetInstanceExtensions(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref>,<sp/>&amp;sdlExtensionsCount,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>!=<sp/>SDL_TRUE<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>extensions<sp/>required<sp/>by<sp/>SDL.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>sdlExtensionsNames<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>[sdlExtensionsCount];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>SDL_Vulkan_GetInstanceExtensions(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref>,<sp/>&amp;sdlExtensionsCount,<sp/>sdlExtensionsNames<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>!=<sp/>SDL_TRUE<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>extensions<sp/>required<sp/>by<sp/>SDL.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char*&gt;<sp/>extensions;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>extensions.reserve(<sp/>sdlExtensionsCount<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sdlExtensionsCount;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extensions.push_back(<sp/>sdlExtensionsNames[i]<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extensions;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>vk::SurfaceKHR<sp/><ref refid="classrx_1_1_window_base_1af058b1991691b3ef0c0bacedc0a895ed" kindref="member">WindowBase::createSurface</ref>(<sp/>vk::Instance<sp/>instance<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/>surface;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_bool<sp/>result<sp/>=<sp/>SDL_Vulkan_CreateSurface(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref>,<sp/>instance,<sp/>&amp;surface<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>!=<sp/>SDL_TRUE<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_core_8hpp_1a4491fbcb10b8b7825807ac930e072513" kindref="member">RX_ERROR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>surface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>surface;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>vk::Extent2D<sp/><ref refid="classrx_1_1_window_base_1ada758bbb29c65ef6cb109c99afa8698d" kindref="member">WindowBase::getExtent</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="96"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_GetWindowSize(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref>,<sp/>&amp;width,<sp/>&amp;height<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>width<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>height<sp/>)<sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_window_base_1a286b65f440d6ae3b2e2e49542ea2b1bc" kindref="member">WindowBase::changed</ref>(<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevWidth<sp/>=<sp/><ref refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" kindref="member">m_width</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevHeight<sp/>=<sp/><ref refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" kindref="member">m_height</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" kindref="member">m_width</ref><sp/>!=<sp/>prevWidth<sp/>||<sp/><ref refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" kindref="member">m_height</ref><sp/>!=<sp/>prevHeight<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevWidth<sp/>=<sp/><ref refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" kindref="member">m_width</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevHeight<sp/>=<sp/><ref refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" kindref="member">m_height</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrx_1_1_window_base_1a0daf35316a751cb18d4c8589a503a0dd" kindref="member">WindowBase::minimized</ref>(<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SDL_GetWindowFlags(<sp/><ref refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" kindref="member">m_window</ref><sp/>)<sp/>&amp;<sp/>SDL_WINDOW_MINIMIZED<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Repos/renderer/src/window/WindowBase.cpp"/>
  </compounddef>
</doxygen>
