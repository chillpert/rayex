<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_custom_window" kind="class" language="C++" prot="public">
    <compoundname>CustomWindow</compoundname>
    <basecompoundref refid="classrx_1_1_window_base" prot="public" virt="non-virtual">rx::WindowBase</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_custom_window_1ad85ef18657d7b52224aa0305f17bf644" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrx_1_1_camera_base" kindref="compound">CameraBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt;CameraBase&gt; CustomWindow::m_camera</definition>
        <argsstring></argsstring>
        <name>m_camera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/example/main.cpp" line="190" column="19" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_custom_window_1af2a7d398cd2f7fb306a956b5f7dea6cb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CustomWindow::m_mouseVisible</definition>
        <argsstring></argsstring>
        <name>m_mouseVisible</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/example/main.cpp" line="191" column="8" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_custom_window_1aeae35d36099dced85ad64e1f097a5fe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CustomWindow::CustomWindow</definition>
        <argsstring>(int width, int height, const char *title, uint32_t flags)</argsstring>
        <name>CustomWindow</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/example/main.cpp" line="56" column="3" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_custom_window_1a850b86f73d9458a0a6b98b15b2ae655b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CustomWindow::init</definition>
        <argsstring>() override</argsstring>
        <name>init</name>
        <reimplements refid="classrx_1_1_window_base_1a3383242489b5e86c58efbf3f7a653fd5">init</reimplements>
        <briefdescription>
<para>Initializes the SDL-window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/example/main.cpp" line="60" column="8" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_custom_window_1ac0b3f3bfe1b98bf47b67a332794462e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool CustomWindow::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classrx_1_1_window_base_1a7d169824a215063c9574568b6e6fecba">update</reimplements>
        <briefdescription>
<para>Updates window-related components. </para>
        </briefdescription>
        <detaileddescription>
<para>In case the client wants to handle input events, this function should be overwritten in the inherited class. <simplesect kind="warning"><para>The client has to call WindowBase::update() to ensure proper functionality. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/example/main.cpp" line="67" column="8" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="67" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_custom_window_1a87bed33494862982588d180e5fde0e98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CustomWindow::setCamera</definition>
        <argsstring>(const std::shared_ptr&lt; CameraBase &gt; camera)</argsstring>
        <name>setCamera</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classrx_1_1_camera_base" kindref="compound">CameraBase</ref> &gt;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/example/main.cpp" line="184" column="8" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>rx::WindowBase</label>
        <link refid="classrx_1_1_window_base"/>
      </node>
      <node id="1">
        <label>CustomWindow</label>
        <link refid="class_custom_window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>rx::WindowBase</label>
        <link refid="classrx_1_1_window_base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_time</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>CustomWindow</label>
        <link refid="class_custom_window"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rx::Time</label>
        <link refid="classrx_1_1_time"/>
      </node>
    </collaborationgraph>
    <location file="C:/Repos/renderer/src/example/main.cpp" line="53" column="1" bodyfile="C:/Repos/renderer/src/example/main.cpp" bodystart="54" bodyend="192"/>
    <listofallmembers>
      <member refid="classrx_1_1_window_base_1a286b65f440d6ae3b2e2e49542ea2b1bc" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>changed</name></member>
      <member refid="classrx_1_1_window_base_1aa50e9ee4e58b6a36340180290d0c99d5" prot="public" virt="virtual"><scope>CustomWindow</scope><name>clean</name></member>
      <member refid="classrx_1_1_window_base_1af058b1991691b3ef0c0bacedc0a895ed" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>createSurface</name></member>
      <member refid="class_custom_window_1aeae35d36099dced85ad64e1f097a5fe7" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>CustomWindow</name></member>
      <member refid="classrx_1_1_window_base_1a98c9d4d754b8ade7a3710ac198610b3b" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>get</name></member>
      <member refid="classrx_1_1_window_base_1ada758bbb29c65ef6cb109c99afa8698d" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>getExtent</name></member>
      <member refid="classrx_1_1_window_base_1a65a4f319a081ec272bda60264f69a960" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>getHeight</name></member>
      <member refid="classrx_1_1_window_base_1a4c965865eadbec64d88bdb0de3a9fbaf" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>getInstanceExtensions</name></member>
      <member refid="classrx_1_1_window_base_1a0bbec2310999df0b650eedf75080cce7" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>getWidth</name></member>
      <member refid="class_custom_window_1a850b86f73d9458a0a6b98b15b2ae655b" prot="public" virt="virtual"><scope>CustomWindow</scope><name>init</name></member>
      <member refid="class_custom_window_1ad85ef18657d7b52224aa0305f17bf644" prot="private" virt="non-virtual"><scope>CustomWindow</scope><name>m_camera</name></member>
      <member refid="classrx_1_1_window_base_1a717f1fc684aa4c1d5773e10b66fe6f6f" prot="protected" virt="non-virtual"><scope>CustomWindow</scope><name>m_flags</name></member>
      <member refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" prot="protected" virt="non-virtual"><scope>CustomWindow</scope><name>m_height</name></member>
      <member refid="class_custom_window_1af2a7d398cd2f7fb306a956b5f7dea6cb" prot="private" virt="non-virtual"><scope>CustomWindow</scope><name>m_mouseVisible</name></member>
      <member refid="classrx_1_1_window_base_1a70eb7bea377c3a7c5dbb3f5c67a51fe3" prot="protected" virt="non-virtual"><scope>CustomWindow</scope><name>m_time</name></member>
      <member refid="classrx_1_1_window_base_1a98ab6f3869a247eebc6ac3c02eee034f" prot="protected" virt="non-virtual"><scope>CustomWindow</scope><name>m_title</name></member>
      <member refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" prot="protected" virt="non-virtual"><scope>CustomWindow</scope><name>m_width</name></member>
      <member refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" prot="protected" virt="non-virtual"><scope>CustomWindow</scope><name>m_window</name></member>
      <member refid="classrx_1_1_window_base_1a0daf35316a751cb18d4c8589a503a0dd" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>minimized</name></member>
      <member refid="classrx_1_1_window_base_1a6313eb78b5d688f3e3997c5163e9ac69" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>resize</name></member>
      <member refid="class_custom_window_1a87bed33494862982588d180e5fde0e98" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>setCamera</name></member>
      <member refid="class_custom_window_1ac0b3f3bfe1b98bf47b67a332794462e3" prot="public" virt="virtual"><scope>CustomWindow</scope><name>update</name></member>
      <member refid="classrx_1_1_window_base_1a4c75fcc5018535133aa56a897ef8d385" prot="public" virt="non-virtual"><scope>CustomWindow</scope><name>WindowBase</name></member>
      <member refid="classrx_1_1_window_base_1ab2bac026a58aa4fdf3b809bfbe364014" prot="public" virt="virtual"><scope>CustomWindow</scope><name>~WindowBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
