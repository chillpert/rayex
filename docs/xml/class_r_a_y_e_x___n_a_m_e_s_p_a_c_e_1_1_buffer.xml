<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kind="class" language="C++" prot="public">
    <compoundname>RAYEX_NAMESPACE::Buffer</compoundname>
    <includes refid="_buffer_8hpp" local="no">Buffer.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a3e7582e91c4af47f8acebae60524263b" prot="protected" static="no" mutable="no">
        <type>vk::UniqueBuffer</type>
        <definition>vk::UniqueBuffer RAYEX_NAMESPACE::Buffer::_buffer</definition>
        <argsstring></argsstring>
        <name>_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="112" column="22" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1ac6c20a052b87d02195db7cee2dd291cd" prot="protected" static="no" mutable="no">
        <type>vk::UniqueDeviceMemory</type>
        <definition>vk::UniqueDeviceMemory RAYEX_NAMESPACE::Buffer::_memory</definition>
        <argsstring></argsstring>
        <name>_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="113" column="28" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a316c2534dca0f0b865308726753712f7" prot="protected" static="no" mutable="no">
        <type>vk::DeviceSize</type>
        <definition>vk::DeviceSize RAYEX_NAMESPACE::Buffer::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="115" column="20" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a3e7f1befed2b79696954e9b3aa8ce2f1" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* RAYEX_NAMESPACE::Buffer::_ptrToData</definition>
        <argsstring></argsstring>
        <name>_ptrToData</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="117" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a6b7afa466fa6c68fc161086f5f576c00" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Buffer::_mapped</definition>
        <argsstring></argsstring>
        <name>_mapped</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="118" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a453a0a1cab9ce09237de96956ad5084e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::Buffer::Buffer</definition>
        <argsstring>()=default</argsstring>
        <name>Buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="12" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1ad0e923c2df3bc18f094576af940f2321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::Buffer::Buffer</definition>
        <argsstring>(vk::DeviceSize size, vk::BufferUsageFlags usage, const std::vector&lt; uint32_t &gt; &amp;queueFamilyIndices={ }, vk::MemoryPropertyFlags memoryPropertyFlags=vk::MemoryPropertyFlagBits::eDeviceLocal, void *pNextMemory=nullptr)</argsstring>
        <name>Buffer</name>
        <param>
          <type>vk::DeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>vk::BufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>queueFamilyIndices</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>vk::MemoryPropertyFlags</type>
          <declname>memoryPropertyFlags</declname>
          <defval>vk::MemoryPropertyFlagBits::eDeviceLocal</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pNextMemory</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Call to init(k::DeviceSize, vk::BufferUsageFlags, const std::vector&lt;uint32_t&gt;&amp;, vk::MemoryPropertyFlags). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="15" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1ab17e6322e8113df32af870a37a5e0e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::Buffer::~Buffer</definition>
        <argsstring>()</argsstring>
        <name>~Buffer</name>
        <briefdescription>
<para>If memory was mapped previously, the destructor will automatically unmap it again. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="18" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a133961b9bd24490925aeed994ae1a4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::Buffer::Buffer</definition>
        <argsstring>(const Buffer &amp;buffer)</argsstring>
        <name>Buffer</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The target for the copy operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a2b633d1f23ddf0ae8ee27987e9373c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::Buffer::Buffer</definition>
        <argsstring>(const Buffer &amp;&amp;)=delete</argsstring>
        <name>Buffer</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kindref="compound">Buffer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="22" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1adccdf72dc2b5a56496881e97c683d5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Buffer::operator=</definition>
        <argsstring>(const Buffer &amp;) -&gt; Buffer &amp;</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Call to copyToBuffer(Buffer). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="25" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a53ea2ff685692af62529589df9fa18a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Buffer::operator=</definition>
        <argsstring>(const Buffer &amp;&amp;) -&gt; Buffer &amp;=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kindref="compound">Buffer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="26" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a6aa15487587ed4a275726dea52d9bd1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Buffer::get</definition>
        <argsstring>() const -&gt; const vk::Buffer</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="28" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a3e59b7d59f338fde8570cd541162cabd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Buffer::getMemory</definition>
        <argsstring>() const -&gt; const vk::DeviceMemory</argsstring>
        <name>getMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="30" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1aa51128ff5d6822bb2df9c2dcd25f99b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Buffer::getSize</definition>
        <argsstring>() const -&gt; const vk::DeviceSize</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="32" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1af4c1f7cd28ec3d75feccf91f704e67d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::init</definition>
        <argsstring>(vk::DeviceSize size, vk::BufferUsageFlags usage, const std::vector&lt; uint32_t &gt; &amp;queueFamilyIndices={ }, vk::MemoryPropertyFlags memoryPropertyFlags=vk::MemoryPropertyFlagBits::eDeviceLocal, void *pNextMemory=nullptr)</argsstring>
        <name>init</name>
        <param>
          <type>vk::DeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>vk::BufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>queueFamilyIndices</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>vk::MemoryPropertyFlags</type>
          <declname>memoryPropertyFlags</declname>
          <defval>vk::MemoryPropertyFlagBits::eDeviceLocal</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pNextMemory</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Creates the buffer and allocates memory for it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queueFamilyIndices</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies which queue family will access the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memoryPropertyFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for memory allocation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pNextMemory</parametername>
</parameternamelist>
<parameterdescription>
<para>Attachment to the memory&apos;s pNext chain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a1cb2f8899ca4dbc523029233e63e5f07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::copyToBuffer</definition>
        <argsstring>(const Buffer &amp;buffer, vk::Fence fence=nullptr) const</argsstring>
        <name>copyToBuffer</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>vk::Fence</type>
          <declname>fence</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Copies the content of this buffer to another <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer" kindref="compound">RAYEX_NAMESPACE::Buffer</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The target for the copy operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fence</parametername>
</parameternamelist>
<parameterdescription>
<para>A fence to wait for when submitting the local single-time-use command buffer to the command queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a4b5a87dce23eab7c91448652ed8072be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::copyToBuffer</definition>
        <argsstring>(vk::Buffer buffer, vk::Fence fence=nullptr) const</argsstring>
        <name>copyToBuffer</name>
        <param>
          <type>vk::Buffer</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>vk::Fence</type>
          <declname>fence</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Copies the content of this buffer to another vk::Buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The target for the copy operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fence</parametername>
</parameternamelist>
<parameterdescription>
<para>A fence to wait for when submitting the local single-time-use command buffer to the command queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a56d4379c382a99311c6e292e419fc183" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::copyToImage</definition>
        <argsstring>(const Image &amp;image) const</argsstring>
        <name>copyToImage</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Copies the content of this buffer to an image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The target for the copy operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1acdc10ad7e5e4a12ea82c3d3e1d4493b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::copyToImage</definition>
        <argsstring>(vk::Image image, vk::Extent3D extent) const</argsstring>
        <name>copyToImage</name>
        <param>
          <type>vk::Image</type>
          <declname>image</declname>
        </param>
        <param>
          <type>vk::Extent3D</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>Copies the content of this buffer to an image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The target for the copy operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extent</parametername>
</parameternamelist>
<parameterdescription>
<para>The target&apos;s extent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a8b2ffc5a8f5476f1108b24d8986c6726" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::fill</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;data, vk::DeviceSize offset=0, std::optional&lt; vk::DeviceSize &gt; size={ })</argsstring>
        <name>fill</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>vk::DeviceSize</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::optional&lt; vk::DeviceSize &gt;</type>
          <declname>size</declname>
          <defval>{ }</defval>
        </param>
        <briefdescription>
<para>Used to fill the buffer with the content of a given std::vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to fill the buffer with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The data&apos;s offset within the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="63" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="63" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a09d0408e61c757b411009e6381d56153" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Buffer::fill</definition>
        <argsstring>(const T *data, vk::DeviceSize offset=0, std::optional&lt; vk::DeviceSize &gt; size={ })</argsstring>
        <name>fill</name>
        <param>
          <type>const T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>vk::DeviceSize</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::optional&lt; vk::DeviceSize &gt;</type>
          <declname>size</declname>
          <defval>{ }</defval>
        </param>
        <briefdescription>
<para>Used to fill the buffer by using a pointer and (optionally) passing the underlying memory size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to fill the buffer with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The data&apos;s offset within the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional size parameter to pass the size of data. If omitted, the size passed when calling <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1af4c1f7cd28ec3d75feccf91f704e67d3" kindref="member">init()</ref> will be used instead. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="87" column="10" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="87" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A wrapper class for a Vulkan buffer object. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" line="10" column="1" bodyfile="/mnt/c/Repos/rayex/include/api/buffers/Buffer.hpp" bodystart="9" bodyend="119"/>
    <listofallmembers>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a3e7582e91c4af47f8acebae60524263b" prot="protected" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>_buffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a6b7afa466fa6c68fc161086f5f576c00" prot="protected" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>_mapped</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1ac6c20a052b87d02195db7cee2dd291cd" prot="protected" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>_memory</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a3e7f1befed2b79696954e9b3aa8ce2f1" prot="protected" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>_ptrToData</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a316c2534dca0f0b865308726753712f7" prot="protected" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>_size</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a453a0a1cab9ce09237de96956ad5084e" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>Buffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1ad0e923c2df3bc18f094576af940f2321" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>Buffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a133961b9bd24490925aeed994ae1a4d4" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>Buffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a2b633d1f23ddf0ae8ee27987e9373c1a" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>Buffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a1cb2f8899ca4dbc523029233e63e5f07" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>copyToBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a4b5a87dce23eab7c91448652ed8072be" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>copyToBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a56d4379c382a99311c6e292e419fc183" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>copyToImage</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1acdc10ad7e5e4a12ea82c3d3e1d4493b2" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>copyToImage</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a8b2ffc5a8f5476f1108b24d8986c6726" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>fill</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a09d0408e61c757b411009e6381d56153" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>fill</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a6aa15487587ed4a275726dea52d9bd1f" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>get</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a3e59b7d59f338fde8570cd541162cabd" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>getMemory</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1aa51128ff5d6822bb2df9c2dcd25f99b6" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>getSize</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1af4c1f7cd28ec3d75feccf91f704e67d3" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>init</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1adccdf72dc2b5a56496881e97c683d5ca" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>operator=</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1a53ea2ff685692af62529589df9fa18a8" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>operator=</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_buffer_1ab17e6322e8113df32af870a37a5e0e27" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Buffer</scope><name>~Buffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
