<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer" kind="class" language="C++" prot="public">
    <compoundname>RAYEX_NAMESPACE::CommandBuffer</compoundname>
    <includes refid="_command_buffer_8hpp" local="no">CommandBuffer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a0fcddb9f99267e95315d63147dd63f1b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::CommandBuffer &gt;</type>
        <definition>std::vector&lt;vk::CommandBuffer&gt; RAYEX_NAMESPACE::CommandBuffer::commandBuffers</definition>
        <argsstring></argsstring>
        <name>commandBuffers</name>
        <briefdescription>
<para>A vector of Vulkan command buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="61" column="17" bodyfile="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1aeebfe3ceb2164000bac0f10e85917e56" prot="private" static="no" mutable="no">
        <type>vk::CommandPool</type>
        <definition>vk::CommandPool RAYEX_NAMESPACE::CommandBuffer::commandPool</definition>
        <argsstring></argsstring>
        <name>commandPool</name>
        <briefdescription>
<para>The Vulkan command pool used to allocate the command buffer from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="63" column="21" bodyfile="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1aa6fbf7ecde842525eef67a250d6c3147" prot="private" static="no" mutable="no">
        <type>vk::CommandBufferBeginInfo</type>
        <definition>vk::CommandBufferBeginInfo RAYEX_NAMESPACE::CommandBuffer::beginInfo</definition>
        <argsstring></argsstring>
        <name>beginInfo</name>
        <briefdescription>
<para>The Vulkan begin information of the command buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="64" column="32" bodyfile="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1abe361754230f783eb86464734b851ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::CommandBuffer::CommandBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>CommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="13" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a3e8baaca6b363d0a78d30ee70c584a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEX_NAMESPACE::CommandBuffer::CommandBuffer</definition>
        <argsstring>(vk::CommandPool commandPool, uint32_t count=1, vk::CommandBufferUsageFlags usageFlags=vk::CommandBufferUsageFlagBits::eOneTimeSubmit)</argsstring>
        <name>CommandBuffer</name>
        <param>
          <type>vk::CommandPool</type>
          <declname>commandPool</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>vk::CommandBufferUsageFlags</type>
          <declname>usageFlags</declname>
          <defval>vk::CommandBufferUsageFlagBits::eOneTimeSubmit</defval>
        </param>
        <briefdescription>
<para>Creates the command buffers and calls initializes them right away. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commandPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The command pool from which the command buffers will be allocated from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of Vulkan command buffers to initialize (the same as the amount of images in the swapchain). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usageFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies what the buffer will be used for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a967443c6c46e162ed9a248f18a4dcd8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::CommandBuffer::init</definition>
        <argsstring>(vk::CommandPool commandPool, uint32_t count=1, vk::CommandBufferUsageFlags usageFlags=vk::CommandBufferUsageFlagBits::eOneTimeSubmit)</argsstring>
        <name>init</name>
        <param>
          <type>vk::CommandPool</type>
          <declname>commandPool</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>vk::CommandBufferUsageFlags</type>
          <declname>usageFlags</declname>
          <defval>vk::CommandBufferUsageFlagBits::eOneTimeSubmit</defval>
        </param>
        <briefdescription>
<para>Creates the command buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commandPool</parametername>
</parameternamelist>
<parameterdescription>
<para>The command pool from which the command buffers will be allocated from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of Vulkan command buffers to initialize (the same as the amount of images in the swapchain). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usageFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies what the buffer will be used for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="25" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1ab0537198c1bdf7fc123867ff04109aec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::CommandBuffer::get</definition>
        <argsstring>() const -&gt; const std::vector&lt; vk::CommandBuffer &gt;</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the vector of command buffers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="28" column="11" bodyfile="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1adede3dee0329159e687a6b7a246ae47c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::CommandBuffer::get</definition>
        <argsstring>(size_t index) const -&gt; const vk::CommandBuffer</argsstring>
        <name>get</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the command buffer by some index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the desired command buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the command buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="33" column="11" bodyfile="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a650ea8a7a5d452734b8cefd118639936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::CommandBuffer::free</definition>
        <argsstring>()</argsstring>
        <name>free</name>
        <briefdescription>
<para>Frees the command buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a7dd7be8f5fea7ebcf338f53e472450f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>RX_API void RAYEX_NAMESPACE::CommandBuffer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Resets the command buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="43" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1adeb8480e5423081dae4f34e7c756f5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::CommandBuffer::begin</definition>
        <argsstring>(size_t index=0)</argsstring>
        <name>begin</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Used to begin the command buffer recording. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>An index to a command buffer to record to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1ad12dd1d9c545827ad5277d596f38c2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::CommandBuffer::end</definition>
        <argsstring>(size_t index=0)</argsstring>
        <name>end</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Used to stop the command buffer recording. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>An index to a command buffer to stop recording. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1ad840dfe3ad8eb1f77a21bbb9d49985d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::CommandBuffer::submitToQueue</definition>
        <argsstring>(vk::Queue queue, const std::vector&lt; vk::Semaphore &gt; &amp;waitSemaphores={ }, const std::vector&lt; vk::Semaphore &gt; &amp;signalSemaphores={ }, vk::PipelineStageFlags *waitDstStageMask={ })</argsstring>
        <name>submitToQueue</name>
        <param>
          <type>vk::Queue</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>const std::vector&lt; vk::Semaphore &gt; &amp;</type>
          <declname>waitSemaphores</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>const std::vector&lt; vk::Semaphore &gt; &amp;</type>
          <declname>signalSemaphores</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>vk::PipelineStageFlags *</type>
          <declname>waitDstStageMask</declname>
          <defval>{ }</defval>
        </param>
        <briefdescription>
<para>Submits the recorded commands to a queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>The queue to submit to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>waitSemaphores</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of semaphores to wait for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signalSemaphores</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of semaphores to signal. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>waitDstStageMask</parametername>
</parameternamelist>
<parameterdescription>
<para>The pipeline stage where the commands will be executed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="58" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A wrapper class for Vulkan command buffers. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" line="11" column="1" bodyfile="/home/n30/Repos/rayex/include/api/buffers/CommandBuffer.hpp" bodystart="10" bodyend="65"/>
    <listofallmembers>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1adeb8480e5423081dae4f34e7c756f5d0" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>begin</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1aa6fbf7ecde842525eef67a250d6c3147" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>beginInfo</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1abe361754230f783eb86464734b851ff8" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>CommandBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a3e8baaca6b363d0a78d30ee70c584a11" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>CommandBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a0fcddb9f99267e95315d63147dd63f1b" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>commandBuffers</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1aeebfe3ceb2164000bac0f10e85917e56" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>commandPool</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1ad12dd1d9c545827ad5277d596f38c2a8" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>end</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a650ea8a7a5d452734b8cefd118639936" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>free</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1ab0537198c1bdf7fc123867ff04109aec" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>get</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1adede3dee0329159e687a6b7a246ae47c" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>get</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a967443c6c46e162ed9a248f18a4dcd8a" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>init</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1a7dd7be8f5fea7ebcf338f53e472450f0" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>reset</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_command_buffer_1ad840dfe3ad8eb1f77a21bbb9d49985d8" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::CommandBuffer</scope><name>submitToQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
