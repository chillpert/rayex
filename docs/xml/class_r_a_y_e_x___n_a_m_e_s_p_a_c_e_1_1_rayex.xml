<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex" kind="class" language="C++" prot="public">
    <compoundname>RAYEX_NAMESPACE::Rayex</compoundname>
    <includes refid="_rayex_8hpp" local="no">Rayex.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1aeffc2a614d26af4c71880c5687cbb4d1" prot="public" static="no" mutable="no">
        <type><ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_settings" kindref="compound">Settings</ref></type>
        <definition>Settings RAYEX_NAMESPACE::Rayex::settings</definition>
        <argsstring></argsstring>
        <name>settings</name>
        <briefdescription>
<para>Used to modify any interal rendering settings. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_settings" kindref="compound">RAYEX_NAMESPACE::Settings</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="66" column="14" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a1a12eb0392e6415a346d2f875290ca78" prot="public" static="no" mutable="no">
        <type><ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene" kindref="compound">Scene</ref></type>
        <definition>Scene RAYEX_NAMESPACE::Rayex::scene</definition>
        <argsstring></argsstring>
        <name>scene</name>
        <briefdescription>
<para>Contains all meshes, all mesh instances and all light sources. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to access the scene directly by adding or removing elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="70" column="11" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a8d7b4f11f338211cb54cd392d15a20bf" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_window" kindref="compound">Window</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Window&gt; RAYEX_NAMESPACE::Rayex::window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The window used to create a surface from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="73" column="21" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1af93f4c7725569d9655966c5c32816591" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_camera" kindref="compound">Camera</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Camera&gt; RAYEX_NAMESPACE::Rayex::camera</definition>
        <argsstring></argsstring>
        <name>camera</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The camera that will be used for rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="74" column="21" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1ac900f540394fb0bd7a994f1e38265fef" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_gui" kindref="compound">Gui</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Gui&gt; RAYEX_NAMESPACE::Rayex::gui</definition>
        <argsstring></argsstring>
        <name>gui</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The ImGui-based GUI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="75" column="21" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1af21beae4fd64c87c66846e74cfb6abc8" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_api" kindref="compound">Api</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Api&gt; RAYEX_NAMESPACE::Rayex::api</definition>
        <argsstring></argsstring>
        <name>api</name>
        <initializer>= std::make_unique&lt;<ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_api" kindref="compound">Api</ref>&gt;( )</initializer>
        <briefdescription>
<para>Manages Vulkan-related tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="76" column="21" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1aa17a0b7201fdb9845cd55e1fdfc18ea5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Rayex::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of the initialization status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="78" column="10" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a8ec9e2db29cb91e2e4dcd2f7cef0b603" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Rayex::running</definition>
        <argsstring></argsstring>
        <name>running</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Keeps track of whether or not the main loop should still be continued. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="79" column="10" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a1392f32dd3309f074f5defc33584e2a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Rayex::initScene</definition>
        <argsstring></argsstring>
        <name>initScene</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Keeps track of whether or not to initialize the scene. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="80" column="10" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a603b64e7ad5ea501077642cd417836a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>RX_API void RAYEX_NAMESPACE::Rayex::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Initializes the renderer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes the window subcomponent as well as the API. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="33" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1ae3073d73c91714b647d95731b0a26885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>RX_API void RAYEX_NAMESPACE::Rayex::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
<para>A single function to execute all subcomponents in order. </para>
        </briefdescription>
        <detaileddescription>
<para>This function updates the window and the camera components and calls the update and render functions of the API. <simplesect kind="see"><para><ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_camera_1ab53ec8ef049669ea018405645d0cb5ed" kindref="member">RAYEX_NAMESPACE::Camera::update()</ref>, <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_window_1a8330a97de6371adc64b7d12419ad2a12" kindref="member">RAYEX_NAMESPACE::Window::update()</ref>, RAYEX_NAMESPACE::Api::update(), RAYEX_NAMESPACE::Api::render() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="39" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1aac607ac7aa791bc2cbd3e52cb09c609d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API auto</type>
        <definition>RX_API auto RAYEX_NAMESPACE::Rayex::isRunning</definition>
        <argsstring>() const -&gt; bool</argsstring>
        <name>isRunning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if the application is still running and false if the application has stopped. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="42" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1ab58f15e6b8f034662ec7207d22296b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>RX_API void RAYEX_NAMESPACE::Rayex::setCamera</definition>
        <argsstring>(std::shared_ptr&lt; Camera &gt; camera)</argsstring>
        <name>setCamera</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_camera" kindref="compound">Camera</ref> &gt;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
<para>Used to set a custom camera. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_camera" kindref="compound">RAYEX_NAMESPACE::Camera</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="46" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1adb2244d970b239304b994fb34cb0cbd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>RX_API void RAYEX_NAMESPACE::Rayex::setWindow</definition>
        <argsstring>(std::shared_ptr&lt; Window &gt; window)</argsstring>
        <name>setWindow</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_window" kindref="compound">Window</ref> &gt;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Used to set a custom window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_window" kindref="compound">RAYEX_NAMESPACE::Window</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="50" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1afa47f7f0f0687a5eccd67feed5c8b2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>RX_API void RAYEX_NAMESPACE::Rayex::setGui</definition>
        <argsstring>(std::shared_ptr&lt; Gui &gt; gui)</argsstring>
        <name>setGui</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_gui" kindref="compound">Gui</ref> &gt;</type>
          <declname>gui</declname>
        </param>
        <briefdescription>
<para>Used to set a custom GUI. </para>
        </briefdescription>
        <detaileddescription>
<para>The GUI can be changed multiple times. Even during runtime. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_gui" kindref="compound">RAYEX_NAMESPACE::Gui</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="56" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a3be83e8f0afa19c75faeffd7889863dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RX_API auto</type>
        <definition>RX_API auto RAYEX_NAMESPACE::Rayex::getWindow</definition>
        <argsstring>() const -&gt; std::shared_ptr&lt; Window &gt;</argsstring>
        <name>getWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a pointer to the renderer&apos;s window. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="59" column="25" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a4550a4c84e09b25d252c74d3d2bfbcf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RX_API auto</type>
        <definition>RX_API auto RAYEX_NAMESPACE::Rayex::getCamera</definition>
        <argsstring>() const -&gt; std::shared_ptr&lt; Camera &gt;</argsstring>
        <name>getCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a pointer to the renderer&apos;s camera. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="62" column="25" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The main user interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides everything to set up a main loop and fill the scene with geometry and light sources. Furthermore, the renderer&apos;s settings can be changed to better fit the user&apos;s purpose. </para>
<sect3 id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1autotoc_md10">
<title>Example</title>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>The<sp/>following<sp/>example<sp/>renders<sp/>a<sp/>cube<sp/>in<sp/>less<sp/>than<sp/>10<sp/>lines<sp/>of<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Rayex<sp/>myRenderer;</highlight></codeline>
<codeline><highlight class="normal">myRenderer.init(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">myRenderer.pushNode(<sp/>std::make_shared&lt;GeometryNode&gt;(<sp/></highlight><highlight class="stringliteral">&quot;models/cube.obj&quot;</highlight><highlight class="normal">,<sp/>Material(<sp/></highlight><highlight class="stringliteral">&quot;textures/metal.png&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>myRenderer.isRunning(<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>myRenderer.run(<sp/>);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</sect3>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>RAYEX_NAMESPACE::Settings</label>
        <link refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_settings"/>
      </node>
      <node id="1">
        <label>RAYEX_NAMESPACE::Rayex</label>
        <link refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex"/>
        <childnode refid="2" relation="usage">
          <edgelabel>scene</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>settings</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>RAYEX_NAMESPACE::Scene</label>
        <link refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene"/>
      </node>
    </collaborationgraph>
    <location file="/home/n30/Repos/rayex/include/Rayex.hpp" line="28" column="1" bodyfile="/home/n30/Repos/rayex/include/Rayex.hpp" bodystart="27" bodyend="81"/>
    <listofallmembers>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1af21beae4fd64c87c66846e74cfb6abc8" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>api</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1af93f4c7725569d9655966c5c32816591" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>camera</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a4550a4c84e09b25d252c74d3d2bfbcf2" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>getCamera</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a3be83e8f0afa19c75faeffd7889863dc" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>getWindow</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1ac900f540394fb0bd7a994f1e38265fef" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>gui</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a603b64e7ad5ea501077642cd417836a6" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>init</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1aa17a0b7201fdb9845cd55e1fdfc18ea5" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>initialized</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a1392f32dd3309f074f5defc33584e2a8" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>initScene</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1aac607ac7aa791bc2cbd3e52cb09c609d" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>isRunning</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1ae3073d73c91714b647d95731b0a26885" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>run</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a8ec9e2db29cb91e2e4dcd2f7cef0b603" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>running</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a1a12eb0392e6415a346d2f875290ca78" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>scene</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1ab58f15e6b8f034662ec7207d22296b3d" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>setCamera</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1afa47f7f0f0687a5eccd67feed5c8b2f6" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>setGui</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1aeffc2a614d26af4c71880c5687cbb4d1" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>settings</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1adb2244d970b239304b994fb34cb0cbd8" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>setWindow</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1a8d7b4f11f338211cb54cd392d15a20bf" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Rayex</scope><name>window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
