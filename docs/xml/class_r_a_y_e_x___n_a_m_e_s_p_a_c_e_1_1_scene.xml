<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene" kind="class" language="C++" prot="public">
    <compoundname>RAYEX_NAMESPACE::Scene</compoundname>
    <includes refid="_scene_8hpp" local="no">Scene.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ae002d16199c05b908fbeecc4f7d97733" prot="public" static="no" mutable="no">
        <type>friend</type>
        <definition>friend RAYEX_NAMESPACE::Scene::Api</definition>
        <argsstring></argsstring>
        <name>Api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="20" column="12" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a03b7257e44db8e9af952484958a5346c" prot="public" static="no" mutable="no">
        <type>friend</type>
        <definition>friend RAYEX_NAMESPACE::Scene::Rayex</definition>
        <argsstring></argsstring>
        <name>Rayex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="21" column="12" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4544c0ae3ef5de4e6310a1118caad95e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" kindref="compound">Geometry</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Geometry&gt; &gt; RAYEX_NAMESPACE::Scene::_geometries</definition>
        <argsstring></argsstring>
        <name>_geometries</name>
        <briefdescription>
<para>Stores all geometries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="103" column="17" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4f8f10cfbcf836e854c1cf47886730e2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance" kindref="compound">GeometryInstance</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;GeometryInstance&gt; &gt; RAYEX_NAMESPACE::Scene::_geometryInstances</definition>
        <argsstring></argsstring>
        <name>_geometryInstances</name>
        <briefdescription>
<para>Stores all geometry instances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="104" column="17" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a535d3cbbfa18f7fe88ec6848100a93e8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_directional_light" kindref="compound">DirectionalLight</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;DirectionalLight&gt; &gt; RAYEX_NAMESPACE::Scene::_directionalLights</definition>
        <argsstring></argsstring>
        <name>_directionalLights</name>
        <briefdescription>
<para>Stores all directional lights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="105" column="17" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a61c47ac2381a03b39c2c4eacfb3e7e11" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_point_light" kindref="compound">PointLight</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;PointLight&gt; &gt; RAYEX_NAMESPACE::Scene::_pointLights</definition>
        <argsstring></argsstring>
        <name>_pointLights</name>
        <briefdescription>
<para>Stores all point lights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="106" column="17" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a3bda047b3d5ac4fd27f7f15c4e047736" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Scene::_uploadGeometryInstancesToBuffer</definition>
        <argsstring></argsstring>
        <name>_uploadGeometryInstancesToBuffer</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of whether or not to upload the ray tracing instances to their respective buffer the next time RAYEX_NAMESPACE::Api::update() is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="108" column="10" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a21adc7a3a7d08eab34897105d3ea04c4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Scene::_uploadDirectionalLightsToBuffer</definition>
        <argsstring></argsstring>
        <name>_uploadDirectionalLightsToBuffer</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of whether or not to upload the directional lights to their respective buffer the next time RAYEX_NAMESPACE::Api::update() is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="109" column="10" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a197c32c6da0c36cee58bedc0d24256ca" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Scene::_uploadPointLightsToBuffer</definition>
        <argsstring></argsstring>
        <name>_uploadPointLightsToBuffer</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of whether or not to upload the point lights to their respective buffer the next time RAYEX_NAMESPACE::Api::update() is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="110" column="10" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4336f26ec64676aecacbd543c482ee0e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Scene::_uploadGeometries</definition>
        <argsstring></argsstring>
        <name>_uploadGeometries</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of whether or not to upload the geometries to their respective buffer the next time RAYEX_NAMESPACE::Api::update() is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="111" column="10" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1add17e79f3bd3f40363b8259ff62f13d8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Scene::_deleteTextures</definition>
        <argsstring></argsstring>
        <name>_deleteTextures</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of whether or not all textures should be deleted the next time RAYEX_NAMESPACE::Api::update() is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="112" column="10" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aaf50a0a8b28eae93f42123039357f362" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RAYEX_NAMESPACE::Scene::_dummy</definition>
        <argsstring></argsstring>
        <name>_dummy</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Keeps track of whether or not a dummy element in case of an empty scene is active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="113" column="10" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a0fbb2c7fd1ede86c0dab9473b729bf9e" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_settings" kindref="compound">Settings</ref> *</type>
        <definition>Settings* RAYEX_NAMESPACE::Scene::_settings</definition>
        <argsstring></argsstring>
        <name>_settings</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Refers to the rendering settings stored in <ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex_1af39e7ea862f949f987aae25faa392d29" kindref="member">Rayex::settings</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="115" column="14" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aef804f5fc22e5d0b27530a00cd054060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Scene::getGeometryInstances</definition>
        <argsstring>() const -&gt; const std::vector&lt; std::shared_ptr&lt; GeometryInstance &gt;&gt; &amp;</argsstring>
        <name>getGeometryInstances</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns all geometry instances in the scene. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="24" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4ca1e82f10c27e433eff652710e8e700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::submitGeometryInstance</definition>
        <argsstring>(std::shared_ptr&lt; GeometryInstance &gt; geometryInstance)</argsstring>
        <name>submitGeometryInstance</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance" kindref="compound">GeometryInstance</ref> &gt;</type>
          <declname>geometryInstance</declname>
        </param>
        <briefdescription>
<para>Used to submit a geometry instance for rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometryInstance</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to queue for rendering. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function does not invoke any draw calls. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="29" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a86b0c09d5294dabeeb550b84ef4ac0c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::setGeometryInstances</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; GeometryInstance &gt;&gt; &amp;geometryInstances)</argsstring>
        <name>setGeometryInstances</name>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance" kindref="compound">GeometryInstance</ref> &gt;&gt; &amp;</type>
          <declname>geometryInstances</declname>
        </param>
        <briefdescription>
<para>Used to submit multiple geometry instances for rendering, replacing all existing instances. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometryInstances</parametername>
</parameternamelist>
<parameterdescription>
<para>The instances to queue for rendering. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function does not invoke any draw calls. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1abd17c0c5eda2b09916ab74cd0c91794d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Scene::getDirectionalLights</definition>
        <argsstring>() const -&gt; const std::vector&lt; std::shared_ptr&lt; DirectionalLight &gt;&gt; &amp;</argsstring>
        <name>getDirectionalLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns all directional lights in the scene. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a0950f2d94e6e9fec8ae01200f001878e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::submitDirectionalLight</definition>
        <argsstring>(std::shared_ptr&lt; DirectionalLight &gt; light)</argsstring>
        <name>submitDirectionalLight</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_directional_light" kindref="compound">DirectionalLight</ref> &gt;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Used to submit a directional light. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>The directional light to submit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="41" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a8654b0489ad56a058af3647ab85c6095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::removeDirectionalLight</definition>
        <argsstring>(std::shared_ptr&lt; DirectionalLight &gt; light)</argsstring>
        <name>removeDirectionalLight</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_directional_light" kindref="compound">DirectionalLight</ref> &gt;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Used to remove a directional light. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>The directional light to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="45" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aefa4c39c0f32defc0e35019048b0bb17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Scene::getPointLights</definition>
        <argsstring>() const -&gt; const std::vector&lt; std::shared_ptr&lt; PointLight &gt;&gt; &amp;</argsstring>
        <name>getPointLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns all point lights in the scene. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a2bf002f75dd17d8c28e0641e461ad2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::submitPointLight</definition>
        <argsstring>(std::shared_ptr&lt; PointLight &gt; light)</argsstring>
        <name>submitPointLight</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_point_light" kindref="compound">PointLight</ref> &gt;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Used to submit a point light. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>The point light to submit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aef891c0cb5abb107b620142ec9ccec00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::removePointLight</definition>
        <argsstring>(std::shared_ptr&lt; PointLight &gt; light)</argsstring>
        <name>removePointLight</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_point_light" kindref="compound">PointLight</ref> &gt;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Used to remove a point light. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>The point light to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a11fc56eb116fe3301a59c5c594ee2bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::removeGeometryInstance</definition>
        <argsstring>(std::shared_ptr&lt; GeometryInstance &gt; geometryInstance)</argsstring>
        <name>removeGeometryInstance</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance" kindref="compound">GeometryInstance</ref> &gt;</type>
          <declname>geometryInstance</declname>
        </param>
        <briefdescription>
<para>Used to remove a geometry instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Once a geometry instance was removed, it will no longer be rendered. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometryInstance</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a42dc12d8a200591532dc336f72a4847d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::clearGeometryInstances</definition>
        <argsstring>()</argsstring>
        <name>clearGeometryInstances</name>
        <briefdescription>
<para>Used to remove all geometry instances. </para>
        </briefdescription>
        <detaileddescription>
<para>However, geometries remain loaded and must be deleted explicitely. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a838076f7347dd4788ee1aaa8ffd28374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::popGeometryInstance</definition>
        <argsstring>()</argsstring>
        <name>popGeometryInstance</name>
        <briefdescription>
<para>Used to remove the last geoemtry instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a53c0ef48ca0c5e0d2336869a8e75085b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::submitGeometry</definition>
        <argsstring>(std::shared_ptr&lt; Geometry &gt; geometry)</argsstring>
        <name>submitGeometry</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" kindref="compound">Geometry</ref> &gt;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Used to submit a geometry and set up its buffers. </para>
        </briefdescription>
        <detaileddescription>
<para>Once a geometry was submitted, geometry instances referencing this particular geometry can be drawn. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry to submit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ab191100612c6087204b476aadfd8b6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::setGeometries</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Geometry &gt;&gt; &amp;geometries)</argsstring>
        <name>setGeometries</name>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" kindref="compound">Geometry</ref> &gt;&gt; &amp;</type>
          <declname>geometries</declname>
        </param>
        <briefdescription>
<para>Used to submit multiple geometries and set up their buffers. </para>
        </briefdescription>
        <detaileddescription>
<para>Once a geometry was submitted, geometry instances referencing this particular geometry can be drawn. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometries</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometries to submit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a8004b0c0dfb783070ea82af111378718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::removeGeometry</definition>
        <argsstring>(std::shared_ptr&lt; Geometry &gt; geometry)</argsstring>
        <name>removeGeometry</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" kindref="compound">Geometry</ref> &gt;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Used to remove a geometry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="86" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1adc0e77e152173899b4edf08fbe62ca18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::removeGeometry</definition>
        <argsstring>(uint32_t geometryIndex)</argsstring>
        <name>removeGeometry</name>
        <param>
          <type>uint32_t</type>
          <declname>geometryIndex</declname>
        </param>
        <briefdescription>
<para>Used to remove a geometry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometryIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry&apos;s index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="90" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ae68fc066eddb4ff7ee2a16c26b06f5ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::popGeometry</definition>
        <argsstring>()</argsstring>
        <name>popGeometry</name>
        <briefdescription>
<para>Used to remove the last geometry and all its instances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ac89ff3616b43e6c2b7e6a23995784a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Scene::clearGeometries</definition>
        <argsstring>()</argsstring>
        <name>clearGeometries</name>
        <briefdescription>
<para>Used to remove all geometries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a344905cab1fbaf5a5585a6df25635bbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Scene::findGeometry</definition>
        <argsstring>(std::string_view path) const -&gt; std::shared_ptr&lt; Geometry &gt;</argsstring>
        <name>findGeometry</name>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Used to retrieve a geoemtry based on its path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry&apos;s model&apos;s path, relative to the path to assets. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="100" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores all geoemtry, geometry instances and light sources. </para>
    </briefdescription>
    <detaileddescription>
<para>Provides functions to change said data. <xrefsect id="todo_1_todo000008"><xreftitle>Todo</xreftitle><xrefdescription><para><ref refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a8004b0c0dfb783070ea82af111378718" kindref="member">removeGeometry()</ref> </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="/home/n30/Repos/rayex/include/base/Scene.hpp" line="18" column="1" bodyfile="/home/n30/Repos/rayex/include/base/Scene.hpp" bodystart="17" bodyend="116"/>
    <listofallmembers>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1add17e79f3bd3f40363b8259ff62f13d8" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_deleteTextures</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a535d3cbbfa18f7fe88ec6848100a93e8" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_directionalLights</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aaf50a0a8b28eae93f42123039357f362" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_dummy</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4544c0ae3ef5de4e6310a1118caad95e" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_geometries</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4f8f10cfbcf836e854c1cf47886730e2" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_geometryInstances</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a61c47ac2381a03b39c2c4eacfb3e7e11" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_pointLights</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a0fbb2c7fd1ede86c0dab9473b729bf9e" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_settings</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a21adc7a3a7d08eab34897105d3ea04c4" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_uploadDirectionalLightsToBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4336f26ec64676aecacbd543c482ee0e" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_uploadGeometries</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a3bda047b3d5ac4fd27f7f15c4e047736" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_uploadGeometryInstancesToBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a197c32c6da0c36cee58bedc0d24256ca" prot="private" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>_uploadPointLightsToBuffer</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ae002d16199c05b908fbeecc4f7d97733" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>Api</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ac89ff3616b43e6c2b7e6a23995784a53" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>clearGeometries</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a42dc12d8a200591532dc336f72a4847d" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>clearGeometryInstances</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a344905cab1fbaf5a5585a6df25635bbc" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>findGeometry</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1abd17c0c5eda2b09916ab74cd0c91794d" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>getDirectionalLights</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aef804f5fc22e5d0b27530a00cd054060" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>getGeometryInstances</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aefa4c39c0f32defc0e35019048b0bb17" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>getPointLights</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ae68fc066eddb4ff7ee2a16c26b06f5ba" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>popGeometry</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a838076f7347dd4788ee1aaa8ffd28374" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>popGeometryInstance</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a03b7257e44db8e9af952484958a5346c" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>Rayex</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a8654b0489ad56a058af3647ab85c6095" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>removeDirectionalLight</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a8004b0c0dfb783070ea82af111378718" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>removeGeometry</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1adc0e77e152173899b4edf08fbe62ca18" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>removeGeometry</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a11fc56eb116fe3301a59c5c594ee2bea" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>removeGeometryInstance</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1aef891c0cb5abb107b620142ec9ccec00" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>removePointLight</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1ab191100612c6087204b476aadfd8b6db" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>setGeometries</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a86b0c09d5294dabeeb550b84ef4ac0c4" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>setGeometryInstances</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a0950f2d94e6e9fec8ae01200f001878e" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>submitDirectionalLight</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a53c0ef48ca0c5e0d2336869a8e75085b" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>submitGeometry</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a4ca1e82f10c27e433eff652710e8e700" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>submitGeometryInstance</name></member>
      <member refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene_1a2bf002f75dd17d8c28e0641e461ad2bd" prot="public" virt="non-virtual"><scope>RAYEX_NAMESPACE::Scene</scope><name>submitPointLight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
