<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface" kind="class" language="C++" prot="public">
    <compoundname>RAYEXEC_NAMESPACE::Surface</compoundname>
    <includes refid="_surface_8hpp" local="no">Surface.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a2cb301404b2c1fa4a09218375a356768" prot="private" static="no" mutable="no">
        <type>vk::SurfaceKHR</type>
        <definition>vk::SurfaceKHR RAYEXEC_NAMESPACE::Surface::surface</definition>
        <argsstring></argsstring>
        <name>surface</name>
        <briefdescription>
<para>The Vulkan surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="47" column="20" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a6f1fcd77ff95d8bd5e0114ba1ab2ecd4" prot="private" static="no" mutable="no">
        <type>vk::Format</type>
        <definition>vk::Format RAYEXEC_NAMESPACE::Surface::format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <initializer>= vk::Format::eB8G8R8A8Unorm</initializer>
        <briefdescription>
<para>The desired surface format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="49" column="16" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a27e5696c48eb6adb02eddc040adc736e" prot="private" static="no" mutable="no">
        <type>vk::ColorSpaceKHR</type>
        <definition>vk::ColorSpaceKHR RAYEXEC_NAMESPACE::Surface::colorSpace</definition>
        <argsstring></argsstring>
        <name>colorSpace</name>
        <initializer>= vk::ColorSpaceKHR::eSrgbNonlinear</initializer>
        <briefdescription>
<para>The desired color space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="50" column="23" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1aefe7ad00e5620fc824050b4bf90b911f" prot="private" static="no" mutable="no">
        <type>vk::PresentModeKHR</type>
        <definition>vk::PresentModeKHR RAYEXEC_NAMESPACE::Surface::presentMode</definition>
        <argsstring></argsstring>
        <name>presentMode</name>
        <initializer>= vk::PresentModeKHR::eImmediate</initializer>
        <briefdescription>
<para>The desired present mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="51" column="24" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1aaa6ef2f4fd9b72eb11cfca2a82399d4c" prot="private" static="no" mutable="no">
        <type>vk::SurfaceCapabilitiesKHR</type>
        <definition>vk::SurfaceCapabilitiesKHR RAYEXEC_NAMESPACE::Surface::capabilities</definition>
        <argsstring></argsstring>
        <name>capabilities</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The surface&apos;s capabilities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="52" column="32" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a2f6bf64e9d0db9bccc2953cf8ccee8ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEXEC_NAMESPACE::Surface::Surface</definition>
        <argsstring>()=default</argsstring>
        <name>Surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="13" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a66f6aa415154d2fcb8cb52c60b1ff50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API</type>
        <definition>RX_API RAYEXEC_NAMESPACE::Surface::~Surface</definition>
        <argsstring>()</argsstring>
        <name>~Surface</name>
        <briefdescription>
<para>Calls destroy(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="15" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1ae109c3463c11f0a8618eae399eafc7a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEXEC_NAMESPACE::Surface::Surface</definition>
        <argsstring>(const Surface &amp;)=delete</argsstring>
        <name>Surface</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface" kindref="compound">Surface</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="17" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a666de7dabd145c3e485fa2d68deb631c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAYEXEC_NAMESPACE::Surface::Surface</definition>
        <argsstring>(const Surface &amp;&amp;)=delete</argsstring>
        <name>Surface</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface" kindref="compound">Surface</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="18" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a4c3ad8eee8a52780e41dbad3a5bb7017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEXEC_NAMESPACE::Surface::operator=</definition>
        <argsstring>(const Surface &amp;) -&gt; Surface &amp;=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface" kindref="compound">Surface</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="20" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a8ec0126e1a66560bad7c8c951e110c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEXEC_NAMESPACE::Surface::operator=</definition>
        <argsstring>(const Surface &amp;&amp;) -&gt; Surface &amp;=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface" kindref="compound">Surface</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="21" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a48a85968025216109364439c33867080" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEXEC_NAMESPACE::Surface::getFormat</definition>
        <argsstring>() const -&gt; vk::Format</argsstring>
        <name>getFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the surface format. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="24" column="11" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a86f07a17c40ddbde618da58505188cac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEXEC_NAMESPACE::Surface::getColorSpace</definition>
        <argsstring>() const -&gt; vk::ColorSpaceKHR</argsstring>
        <name>getColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the surface&apos;s color space. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="27" column="11" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1af5c6d1a091849de2f27d50313c528663" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEXEC_NAMESPACE::Surface::getPresentMode</definition>
        <argsstring>() const -&gt; vk::PresentModeKHR</argsstring>
        <name>getPresentMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the surface&apos;s present mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="30" column="11" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a3e5cddc4a0865d6409f3cbc3ec445ad0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEXEC_NAMESPACE::Surface::getCapabilities</definition>
        <argsstring>() const -&gt; vk::SurfaceCapabilitiesKHR</argsstring>
        <name>getCapabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the surface&apos;s capabilities. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="33" column="11" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1aab66cf348fdbaf821130405764db7f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEXEC_NAMESPACE::Surface::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Initializes the Vulkan surface object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If any of the specified format, color space and present mode are not available the function will fall back to settings that are guaranteed to be supported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a110994fc7096f6fd95e7b6aafee6ca1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEXEC_NAMESPACE::Surface::assessSettings</definition>
        <argsstring>()</argsstring>
        <name>assessSettings</name>
        <briefdescription>
<para>Checks if the preferred settings for format, color space and present mode are available. </para>
        </briefdescription>
        <detaileddescription>
<para>If not, the function will set them to some fallback values. <simplesect kind="warning"><para>Must be called right after the enumeration of the physical device. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="41" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a9f562381f2e8b56bda408d390a93723d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEXEC_NAMESPACE::Surface::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>Destroys the surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="45" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A wrapper class for a Vulkan surface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/n30/Repos/rayexec/include/api/Surface.hpp" line="11" column="1" bodyfile="/home/n30/Repos/rayexec/include/api/Surface.hpp" bodystart="10" bodyend="53"/>
    <listofallmembers>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a110994fc7096f6fd95e7b6aafee6ca1b" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>assessSettings</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1aaa6ef2f4fd9b72eb11cfca2a82399d4c" prot="private" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>capabilities</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a27e5696c48eb6adb02eddc040adc736e" prot="private" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>colorSpace</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a9f562381f2e8b56bda408d390a93723d" prot="private" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>destroy</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a6f1fcd77ff95d8bd5e0114ba1ab2ecd4" prot="private" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>format</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a3e5cddc4a0865d6409f3cbc3ec445ad0" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>getCapabilities</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a86f07a17c40ddbde618da58505188cac" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>getColorSpace</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a48a85968025216109364439c33867080" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>getFormat</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1af5c6d1a091849de2f27d50313c528663" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>getPresentMode</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1aab66cf348fdbaf821130405764db7f97" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>init</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a4c3ad8eee8a52780e41dbad3a5bb7017" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>operator=</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a8ec0126e1a66560bad7c8c951e110c07" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>operator=</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1aefe7ad00e5620fc824050b4bf90b911f" prot="private" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>presentMode</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a2cb301404b2c1fa4a09218375a356768" prot="private" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>surface</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a2f6bf64e9d0db9bccc2953cf8ccee8ef" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>Surface</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1ae109c3463c11f0a8618eae399eafc7a9" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>Surface</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a666de7dabd145c3e485fa2d68deb631c" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>Surface</name></member>
      <member refid="class_r_a_y_e_x_e_c___n_a_m_e_s_p_a_c_e_1_1_surface_1a66f6aa415154d2fcb8cb52c60b1ff50c" prot="public" virt="non-virtual"><scope>RAYEXEC_NAMESPACE::Surface</scope><name>~Surface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
