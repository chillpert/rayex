<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrx_1_1_api" kind="class" language="C++" prot="public">
    <compoundname>rx::Api</compoundname>
    <includes refid="_api_8hpp" local="no">Api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrx_1_1_api_1ad232c9c6d49d12324b53963a23183bd1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrx_1_1_window_base" kindref="compound">WindowBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt;WindowBase&gt; rx::Api::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="155" column="21" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a6191b2593d1ec41713a4d42bef7ca7f4" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrx_1_1_camera_base" kindref="compound">CameraBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt;CameraBase&gt; rx::Api::m_camera</definition>
        <argsstring></argsstring>
        <name>m_camera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="156" column="21" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a2072fde7ebef1afd18beba712669fc21" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_instance" kindref="compound">Instance</ref></type>
        <definition>Instance rx::Api::m_instance</definition>
        <argsstring></argsstring>
        <name>m_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="159" column="14" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1aeac35cfa4d613d663ea06f654e36c097" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_debug_messenger" kindref="compound">DebugMessenger</ref></type>
        <definition>DebugMessenger rx::Api::m_debugMessenger</definition>
        <argsstring></argsstring>
        <name>m_debugMessenger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="160" column="20" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1ae0ecb9364b710956ea819f18629f9ccd" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_surface" kindref="compound">Surface</ref></type>
        <definition>Surface rx::Api::m_surface</definition>
        <argsstring></argsstring>
        <name>m_surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="161" column="13" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1af5a219bd7d05a228b2d9bbcce854db95" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_device" kindref="compound">Device</ref></type>
        <definition>Device rx::Api::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="162" column="12" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1ac0d89a1520ec2120a42a6d9e7d8d4fa8" prot="private" static="no" mutable="no">
        <type>vk::UniqueCommandPool</type>
        <definition>vk::UniqueCommandPool rx::Api::m_graphicsCmdPool</definition>
        <argsstring></argsstring>
        <name>m_graphicsCmdPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="163" column="27" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a1a027b2cb8890d60cbb1a5f2f8892fdc" prot="private" static="no" mutable="no">
        <type>vk::UniqueCommandPool</type>
        <definition>vk::UniqueCommandPool rx::Api::m_transferCmdPool</definition>
        <argsstring></argsstring>
        <name>m_transferCmdPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="164" column="27" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1aeca294d7504985b4b99768a6075f658f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::UniqueFence &gt;</type>
        <definition>std::vector&lt;vk::UniqueFence&gt; rx::Api::m_inFlightFences</definition>
        <argsstring></argsstring>
        <name>m_inFlightFences</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="165" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a38f8bc10a20063f657f0a7ba3235aca2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::UniqueSemaphore &gt;</type>
        <definition>std::vector&lt;vk::UniqueSemaphore&gt; rx::Api::m_imageAvailableSemaphores</definition>
        <argsstring></argsstring>
        <name>m_imageAvailableSemaphores</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="166" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1ad85942e30c1cb6922ab27f92ae8ba55f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::UniqueSemaphore &gt;</type>
        <definition>std::vector&lt;vk::UniqueSemaphore&gt; rx::Api::m_finishedRenderSemaphores</definition>
        <argsstring></argsstring>
        <name>m_finishedRenderSemaphores</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="167" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1ae09fcba94936f047e568d273dfb90fa3" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref></type>
        <definition>DescriptorSetLayout rx::Api::m_rtDescriptorSetLayout</definition>
        <argsstring></argsstring>
        <name>m_rtDescriptorSetLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="169" column="25" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a518b2490431f1d763ddc2c207a691cd3" prot="private" static="no" mutable="no">
        <type>vk::UniqueDescriptorPool</type>
        <definition>vk::UniqueDescriptorPool rx::Api::m_rtDescriptorPool</definition>
        <argsstring></argsstring>
        <name>m_rtDescriptorPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="170" column="30" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a58e4e13afde04f080800b647bb8c79f2" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_descriptor_set" kindref="compound">DescriptorSet</ref></type>
        <definition>DescriptorSet rx::Api::m_rtDescriptorSets</definition>
        <argsstring></argsstring>
        <name>m_rtDescriptorSets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="171" column="19" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1adf30eeac10b978e182b6c747ec59595b" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_descriptor_set_layout" kindref="compound">DescriptorSetLayout</ref></type>
        <definition>DescriptorSetLayout rx::Api::m_descriptorSetLayout</definition>
        <argsstring></argsstring>
        <name>m_descriptorSetLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="173" column="25" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a3b1ed243dea8fb483de4b98b9e6b47be" prot="private" static="no" mutable="no">
        <type>vk::UniqueDescriptorPool</type>
        <definition>vk::UniqueDescriptorPool rx::Api::m_descriptorPool</definition>
        <argsstring></argsstring>
        <name>m_descriptorPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="174" column="30" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a4c31545d4d43daa6be028d1fa464cb79" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_uniform_buffer" kindref="compound">UniformBuffer</ref></type>
        <definition>UniformBuffer rx::Api::m_cameraUniformBuffer</definition>
        <argsstring></argsstring>
        <name>m_cameraUniformBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="176" column="19" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1aa51394efec00d86a5dc309fcc9ca175a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classrx_1_1_geometry_node" kindref="compound">GeometryNode</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;GeometryNode&gt; &gt; rx::Api::m_geometryNodes</definition>
        <argsstring></argsstring>
        <name>m_geometryNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="179" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a992baa377e8ef731d165d9ee136fa5d6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classrx_1_1_light_node" kindref="compound">LightNode</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;LightNode&gt; &gt; rx::Api::m_lightNodes</definition>
        <argsstring></argsstring>
        <name>m_lightNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="180" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a8e7e47b9bb5bc0a5fd8e49379aba5e46" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classrx_1_1_model" kindref="compound">Model</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::shared_ptr&lt;Model&gt; &gt; rx::Api::m_models</definition>
        <argsstring></argsstring>
        <name>m_models</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="182" column="24" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a3297aab74e9c20b203e6b96a9da87826" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classrx_1_1_texture" kindref="compound">Texture</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::shared_ptr&lt;Texture&gt; &gt; rx::Api::m_textures</definition>
        <argsstring></argsstring>
        <name>m_textures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="184" column="24" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1aa774d401fedba283c235367a3c69a407" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_swapchain" kindref="compound">Swapchain</ref></type>
        <definition>Swapchain rx::Api::m_swapchain</definition>
        <argsstring></argsstring>
        <name>m_swapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="186" column="15" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a85535030dd999ef9401727d3a90f702a" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_render_pass" kindref="compound">RenderPass</ref></type>
        <definition>RenderPass rx::Api::m_renderPass</definition>
        <argsstring></argsstring>
        <name>m_renderPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="187" column="16" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a671d9069af8f5b4c91fd446554f9cf2f" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_pipeline" kindref="compound">Pipeline</ref></type>
        <definition>Pipeline rx::Api::m_rtPipeline</definition>
        <argsstring></argsstring>
        <name>m_rtPipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="188" column="14" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a4b901560979b6362541ed4380d439578" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_command_buffer" kindref="compound">CommandBuffer</ref></type>
        <definition>CommandBuffer rx::Api::m_swapchainCommandBuffers</definition>
        <argsstring></argsstring>
        <name>m_swapchainCommandBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="189" column="19" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1aa6b4a60cf87071494f1a0bba20968f30" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrx_1_1_gui_base" kindref="compound">GuiBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt;GuiBase&gt; rx::Api::m_gui</definition>
        <argsstring></argsstring>
        <name>m_gui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="191" column="21" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1ad4e1db978e63a778842d6b5b015a7927" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_physical_device" kindref="compound">PhysicalDevice</ref></type>
        <definition>PhysicalDevice rx::Api::m_physicalDevice</definition>
        <argsstring></argsstring>
        <name>m_physicalDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="194" column="20" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a35adf3fe47a69ea6629982f988982c92" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_queues" kindref="compound">Queues</ref></type>
        <definition>Queues rx::Api::m_queues</definition>
        <argsstring></argsstring>
        <name>m_queues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="195" column="12" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a7101199c44a483003318082559e788ba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::Fence &gt;</type>
        <definition>std::vector&lt;vk::Fence&gt; rx::Api::m_imagesInFlight</definition>
        <argsstring></argsstring>
        <name>m_imagesInFlight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="196" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a13b69eb0da7f02a53aa4c37907c79529" prot="private" static="no" mutable="no">
        <type><ref refid="classrx_1_1_ray_tracing_builder" kindref="compound">RayTracingBuilder</ref></type>
        <definition>RayTracingBuilder rx::Api::m_rayTracingBuilder</definition>
        <argsstring></argsstring>
        <name>m_rayTracingBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="198" column="23" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_api_1a21a60e1b51869ddb32a35c2d53b3ee03" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rx::Api::m_recreateSwapchain</definition>
        <argsstring></argsstring>
        <name>m_recreateSwapchain</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="200" column="10" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrx_1_1_api_1a7bad2b28bb07e9d1702b7b38b5ab1b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rx::Api::Api</definition>
        <argsstring>(std::shared_ptr&lt; WindowBase &gt; window, std::shared_ptr&lt; CameraBase &gt; camera)</argsstring>
        <name>Api</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrx_1_1_window_base" kindref="compound">WindowBase</ref> &gt;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrx_1_1_camera_base" kindref="compound">CameraBase</ref> &gt;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a window object that the API will use to display an image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a camera object that will be used to &quot;capture&quot; the scene. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="36" column="5" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1ac6dbd699b06b0a9cfc7ccdf91a98d544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rx::Api::Api</definition>
        <argsstring>(std::shared_ptr&lt; WindowBase &gt; window, std::shared_ptr&lt; GuiBase &gt; gui, std::shared_ptr&lt; CameraBase &gt; camera)</argsstring>
        <name>Api</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrx_1_1_window_base" kindref="compound">WindowBase</ref> &gt;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrx_1_1_gui_base" kindref="compound">GuiBase</ref> &gt;</type>
          <declname>gui</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrx_1_1_camera_base" kindref="compound">CameraBase</ref> &gt;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a window object that the API will use to display an image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a GUI object that will be rendered on top of the final image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a camera object that will be used to &quot;capture&quot; the scene. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="41" column="5" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1ae7ab307628a20bf016e0eb5b030d1d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API</type>
        <definition>rx::Api::~Api</definition>
        <argsstring>()</argsstring>
        <name>~Api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="42" column="12" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a1c214a508caee161e41241a66a465d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>void rx::Api::setGui</definition>
        <argsstring>(const std::shared_ptr&lt; GuiBase &gt; gui, bool initialize=false)</argsstring>
        <name>setGui</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classrx_1_1_gui_base" kindref="compound">GuiBase</ref> &gt;</type>
          <declname>gui</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Used to set the GUI that will be used. </para>
        </briefdescription>
        <detaileddescription>
<para>The GUI can be changed at runtime. This enables the client to swap between different pre-built GUIs on the fly. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a GUI object that will be rendered on top of the final image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the GUI object will be initialized (false if not specified). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="49" column="17" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="54" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a3e0a1bb5a7c8b518225358fe4ea5ee39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Api::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Initializes all API components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="52" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="68" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a582e12ba6f8b26173a5ef569ee2eeeaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rx::Api::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
<para>Used to update and upload uniform buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="55" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="155" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a79f83f0658f4fd2a2012b5191d8e4ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rx::Api::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
<para>Retrieves an image from the swapchain and presents it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="58" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="231" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a203b4336eeb7a4afccfeb0612ef99998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="classrx_1_1_model" kindref="compound">Model</ref></defval>
          </param>
        </templateparamlist>
        <type>RX_API void</type>
        <definition>RX_API void rx::Api::pushNode</definition>
        <argsstring>(const std::shared_ptr&lt; Node &gt; node, bool record=true)</argsstring>
        <name>pushNode</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classrx_1_1_node" kindref="compound">Node</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>record</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Used to add another arbitrary node to the scene. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to node to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="63" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="63" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a72a7ec289fe4c4cb0155cf51270a7164" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="classrx_1_1_model" kindref="compound">Model</ref></defval>
          </param>
        </templateparamlist>
        <type>RX_API void</type>
        <definition>RX_API void rx::Api::setNodes</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Node &gt;&gt; &amp;nodes)</argsstring>
        <name>setNodes</name>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classrx_1_1_node" kindref="compound">Node</ref> &gt;&gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Used to overwrite the entire scene with new nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of pointers to nodes describing the new scene. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="108" column="17" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="108" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a295c1251c0ba46952df9dd19a0f7d1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>void rx::Api::initGui</definition>
        <argsstring>()</argsstring>
        <name>initGui</name>
        <briefdescription>
<para>Re-initializes the render pass to support the GUI and initializes the GUI itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="121" column="17" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="358" bodyend="365"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrx_1_1_api_1aab16b8a2fdc96a4145ba817cefc43334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Api::initRenderPass</definition>
        <argsstring>()</argsstring>
        <name>initRenderPass</name>
        <briefdescription>
<para>Initializes the render pass with a color and depth attachment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="125" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="285" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a15369dc3ad827f0a7c1a296e00c30d5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>void rx::Api::initModel</definition>
        <argsstring>(const std::shared_ptr&lt; GeometryNode &gt; node)</argsstring>
        <name>initModel</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classrx_1_1_geometry_node" kindref="compound">GeometryNode</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initializes the model provided by the node. </para>
        </briefdescription>
        <detaileddescription>
<para>The model will be added to rx::Api::m_models to make sure there are no duplicates. Similarily, all textures required by the model will be stored individualy inside rx::Api::m_textures. If a model or a texture are already known to the application and have been initialized, they will be re-used instead of being initialized. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a geometry node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>The function currently recreates the entire TLAS and BLAS everytime a model is added, which is very inefficient. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="134" column="17" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="329" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1ac001b41ebd9ab9f1da6945936a15627d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>void rx::Api::recordSwapchainCommandBuffers</definition>
        <argsstring>()</argsstring>
        <name>recordSwapchainCommandBuffers</name>
        <briefdescription>
<para>Records commands to the swapchain command buffers that will be used for rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>Rasterization has been removed for now. Might want to re-add rasterization support with RT-compatible shaders again. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="138" column="17" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="367" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1afaea2b2aa2001f1c5be21fb4045e55c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Api::initSyncObjects</definition>
        <argsstring>()</argsstring>
        <name>initSyncObjects</name>
        <briefdescription>
<para>Creates all fences and semaphores required to sync the rendering process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="141" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="400" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1aff5efe3b8c4b7f3a3b40c4c98914eef0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Api::initDescriptorSetLayouts</definition>
        <argsstring>()</argsstring>
        <name>initDescriptorSetLayouts</name>
        <briefdescription>
<para>Creates a descriptor set layout for each the ray tracing components and the models. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="144" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="415" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a7e75eabc479ff4a1b241622b7605d56e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Api::recreateSwapchain</definition>
        <argsstring>()</argsstring>
        <name>recreateSwapchain</name>
        <briefdescription>
<para>Recreates the swapchain and re-records the swapchain command buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="147" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="252" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a2acf043e5397ad85ae18f4d222fb68bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rx::Api::prepareFrame</definition>
        <argsstring>()</argsstring>
        <name>prepareFrame</name>
        <briefdescription>
<para>Acquires the next image from the swapchain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="150" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="178" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_api_1a97dbaaed072413266cb7ba50c4132bbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rx::Api::submitFrame</definition>
        <argsstring>()</argsstring>
        <name>submitFrame</name>
        <briefdescription>
<para>Submits the swapchain command buffers to a queue and presents an image on the screen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/Api.hpp" line="153" column="10" bodyfile="C:/Repos/renderer/src/api/Api.cpp" bodystart="198" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Initializes and owns all Vulkan components and displays a picture on the screen. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>All API components and resources are freed using scope-bound destruction. </para>
</simplesect>
<simplesect kind="warning"><para>Because of scope-bound destruction it is required to pay close attention to the order of resource allocations done by the client. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="C:/Repos/renderer/src/api/Api.hpp" line="31" column="3" bodyfile="C:/Repos/renderer/src/api/Api.hpp" bodystart="32" bodyend="201"/>
    <listofallmembers>
      <member refid="classrx_1_1_api_1a7bad2b28bb07e9d1702b7b38b5ab1b96" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>Api</name></member>
      <member refid="classrx_1_1_api_1ac6dbd699b06b0a9cfc7ccdf91a98d544" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>Api</name></member>
      <member refid="classrx_1_1_api_1a3e0a1bb5a7c8b518225358fe4ea5ee39" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>init</name></member>
      <member refid="classrx_1_1_api_1aff5efe3b8c4b7f3a3b40c4c98914eef0" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>initDescriptorSetLayouts</name></member>
      <member refid="classrx_1_1_api_1a295c1251c0ba46952df9dd19a0f7d1f3" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>initGui</name></member>
      <member refid="classrx_1_1_api_1a15369dc3ad827f0a7c1a296e00c30d5c" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>initModel</name></member>
      <member refid="classrx_1_1_api_1aab16b8a2fdc96a4145ba817cefc43334" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>initRenderPass</name></member>
      <member refid="classrx_1_1_api_1afaea2b2aa2001f1c5be21fb4045e55c2" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>initSyncObjects</name></member>
      <member refid="classrx_1_1_api_1a6191b2593d1ec41713a4d42bef7ca7f4" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_camera</name></member>
      <member refid="classrx_1_1_api_1a4c31545d4d43daa6be028d1fa464cb79" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_cameraUniformBuffer</name></member>
      <member refid="classrx_1_1_api_1aeac35cfa4d613d663ea06f654e36c097" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_debugMessenger</name></member>
      <member refid="classrx_1_1_api_1a3b1ed243dea8fb483de4b98b9e6b47be" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_descriptorPool</name></member>
      <member refid="classrx_1_1_api_1adf30eeac10b978e182b6c747ec59595b" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_descriptorSetLayout</name></member>
      <member refid="classrx_1_1_api_1af5a219bd7d05a228b2d9bbcce854db95" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_device</name></member>
      <member refid="classrx_1_1_api_1ad85942e30c1cb6922ab27f92ae8ba55f" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_finishedRenderSemaphores</name></member>
      <member refid="classrx_1_1_api_1aa51394efec00d86a5dc309fcc9ca175a" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_geometryNodes</name></member>
      <member refid="classrx_1_1_api_1ac0d89a1520ec2120a42a6d9e7d8d4fa8" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_graphicsCmdPool</name></member>
      <member refid="classrx_1_1_api_1aa6b4a60cf87071494f1a0bba20968f30" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_gui</name></member>
      <member refid="classrx_1_1_api_1a38f8bc10a20063f657f0a7ba3235aca2" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_imageAvailableSemaphores</name></member>
      <member refid="classrx_1_1_api_1a7101199c44a483003318082559e788ba" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_imagesInFlight</name></member>
      <member refid="classrx_1_1_api_1aeca294d7504985b4b99768a6075f658f" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_inFlightFences</name></member>
      <member refid="classrx_1_1_api_1a2072fde7ebef1afd18beba712669fc21" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_instance</name></member>
      <member refid="classrx_1_1_api_1a992baa377e8ef731d165d9ee136fa5d6" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_lightNodes</name></member>
      <member refid="classrx_1_1_api_1a8e7e47b9bb5bc0a5fd8e49379aba5e46" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_models</name></member>
      <member refid="classrx_1_1_api_1ad4e1db978e63a778842d6b5b015a7927" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_physicalDevice</name></member>
      <member refid="classrx_1_1_api_1a35adf3fe47a69ea6629982f988982c92" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_queues</name></member>
      <member refid="classrx_1_1_api_1a13b69eb0da7f02a53aa4c37907c79529" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_rayTracingBuilder</name></member>
      <member refid="classrx_1_1_api_1a21a60e1b51869ddb32a35c2d53b3ee03" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_recreateSwapchain</name></member>
      <member refid="classrx_1_1_api_1a85535030dd999ef9401727d3a90f702a" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_renderPass</name></member>
      <member refid="classrx_1_1_api_1a518b2490431f1d763ddc2c207a691cd3" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_rtDescriptorPool</name></member>
      <member refid="classrx_1_1_api_1ae09fcba94936f047e568d273dfb90fa3" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_rtDescriptorSetLayout</name></member>
      <member refid="classrx_1_1_api_1a58e4e13afde04f080800b647bb8c79f2" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_rtDescriptorSets</name></member>
      <member refid="classrx_1_1_api_1a671d9069af8f5b4c91fd446554f9cf2f" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_rtPipeline</name></member>
      <member refid="classrx_1_1_api_1ae0ecb9364b710956ea819f18629f9ccd" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_surface</name></member>
      <member refid="classrx_1_1_api_1aa774d401fedba283c235367a3c69a407" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_swapchain</name></member>
      <member refid="classrx_1_1_api_1a4b901560979b6362541ed4380d439578" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_swapchainCommandBuffers</name></member>
      <member refid="classrx_1_1_api_1a3297aab74e9c20b203e6b96a9da87826" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_textures</name></member>
      <member refid="classrx_1_1_api_1a1a027b2cb8890d60cbb1a5f2f8892fdc" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_transferCmdPool</name></member>
      <member refid="classrx_1_1_api_1ad232c9c6d49d12324b53963a23183bd1" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>m_window</name></member>
      <member refid="classrx_1_1_api_1a2acf043e5397ad85ae18f4d222fb68bf" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>prepareFrame</name></member>
      <member refid="classrx_1_1_api_1a203b4336eeb7a4afccfeb0612ef99998" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>pushNode</name></member>
      <member refid="classrx_1_1_api_1ac001b41ebd9ab9f1da6945936a15627d" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>recordSwapchainCommandBuffers</name></member>
      <member refid="classrx_1_1_api_1a7e75eabc479ff4a1b241622b7605d56e" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>recreateSwapchain</name></member>
      <member refid="classrx_1_1_api_1a79f83f0658f4fd2a2012b5191d8e4ee5" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>render</name></member>
      <member refid="classrx_1_1_api_1a1c214a508caee161e41241a66a465d0b" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>setGui</name></member>
      <member refid="classrx_1_1_api_1a72a7ec289fe4c4cb0155cf51270a7164" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>setNodes</name></member>
      <member refid="classrx_1_1_api_1a97dbaaed072413266cb7ba50c4132bbe" prot="private" virt="non-virtual"><scope>rx::Api</scope><name>submitFrame</name></member>
      <member refid="classrx_1_1_api_1a582e12ba6f8b26173a5ef569ee2eeeaa" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>update</name></member>
      <member refid="classrx_1_1_api_1ae7ab307628a20bf016e0eb5b030d1d9c" prot="public" virt="non-virtual"><scope>rx::Api</scope><name>~Api</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
