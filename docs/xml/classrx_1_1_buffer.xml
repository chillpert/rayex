<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrx_1_1_buffer" kind="class" language="C++" prot="public">
    <compoundname>rx::Buffer</compoundname>
    <includes refid="_buffer_8hpp" local="no">Buffer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrx_1_1_buffer_1a637f9f49535178d17698505ec0e4859a" prot="private" static="no" mutable="no">
        <type>vk::UniqueBuffer</type>
        <definition>vk::UniqueBuffer rx::Buffer::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="28" column="22" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_buffer_1a6f2b7d287631e65d775cc41210c999d4" prot="private" static="no" mutable="no">
        <type>vk::UniqueDeviceMemory</type>
        <definition>vk::UniqueDeviceMemory rx::Buffer::m_memory</definition>
        <argsstring></argsstring>
        <name>m_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="29" column="28" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_buffer_1a9f35cdcb2aef37647274875014597c32" prot="private" static="no" mutable="no">
        <type>vk::DeviceSize</type>
        <definition>vk::DeviceSize rx::Buffer::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="31" column="20" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrx_1_1_buffer_1ad549ae24d3847007a301b57a178887bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rx::Buffer::Buffer</definition>
        <argsstring>()=default</argsstring>
        <name>Buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="12" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1a1e31ae5e388c834d7ad2815f0b06ee96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rx::Buffer::Buffer</definition>
        <argsstring>(vk::DeviceSize size, vk::BufferUsageFlags usage, const std::vector&lt; uint32_t &gt; &amp;queueFamilyIndices={ }, vk::MemoryPropertyFlags memoryPropertyFlags=vk::MemoryPropertyFlagBits::eDeviceLocal, void *pNextMemory=nullptr, bool initialize=true)</argsstring>
        <name>Buffer</name>
        <param>
          <type>vk::DeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>vk::BufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>queueFamilyIndices</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>vk::MemoryPropertyFlags</type>
          <declname>memoryPropertyFlags</declname>
          <defval>vk::MemoryPropertyFlagBits::eDeviceLocal</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pNextMemory</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>initialize</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="13" column="5" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.cpp" bodystart="8" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1a491b496f95f75b0b586d262be250a011" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Buffer::copyToBuffer</definition>
        <argsstring>(Buffer &amp;buffer) const</argsstring>
        <name>copyToBuffer</name>
        <param>
          <type><ref refid="classrx_1_1_buffer" kindref="compound">Buffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="15" column="10" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.cpp" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1abc4c095d4eb6da7d00a6255074ed5d45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Buffer::copyToImage</definition>
        <argsstring>(Image &amp;image) const</argsstring>
        <name>copyToImage</name>
        <param>
          <type><ref refid="classrx_1_1_image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="16" column="10" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.cpp" bodystart="45" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1a4055ed30a94888249e37f3ea46bf09e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const vk::Buffer</type>
        <definition>const vk::Buffer rx::Buffer::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="18" column="29" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1a00f743b54f4f6ac79e4dde5079de1d5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const vk::DeviceMemory</type>
        <definition>const vk::DeviceMemory rx::Buffer::getMemory</definition>
        <argsstring>() const</argsstring>
        <name>getMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="19" column="35" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1a9f6c8caed7b9ae15afaa30644a87fa36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const vk::DeviceSize</type>
        <definition>const vk::DeviceSize rx::Buffer::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="20" column="33" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1a3dcb26ae5db02346a1b81cac1c97dbbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rx::Buffer::init</definition>
        <argsstring>(vk::DeviceSize size, vk::BufferUsageFlags usage, const std::vector&lt; uint32_t &gt; &amp;queueFamilyIndices={ }, vk::MemoryPropertyFlags memoryPropertyFlags=vk::MemoryPropertyFlagBits::eDeviceLocal, void *pNextMemory=nullptr)</argsstring>
        <name>init</name>
        <param>
          <type>vk::DeviceSize</type>
          <declname>size</declname>
        </param>
        <param>
          <type>vk::BufferUsageFlags</type>
          <declname>usage</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>queueFamilyIndices</declname>
          <defval>{ }</defval>
        </param>
        <param>
          <type>vk::MemoryPropertyFlags</type>
          <declname>memoryPropertyFlags</declname>
          <defval>vk::MemoryPropertyFlagBits::eDeviceLocal</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>pNextMemory</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="22" column="10" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.cpp" bodystart="14" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_buffer_1ae67da1cda37050466a0dda5edca5f0b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rx::Buffer::fill</definition>
        <argsstring>(T *source, vk::DeviceSize offset=0)</argsstring>
        <name>fill</name>
        <param>
          <type>T *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>vk::DeviceSize</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="25" column="10" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="35" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Repos/renderer/src/api/buffers/Buffer.hpp" line="9" column="3" bodyfile="C:/Repos/renderer/src/api/buffers/Buffer.hpp" bodystart="10" bodyend="32"/>
    <listofallmembers>
      <member refid="classrx_1_1_buffer_1ad549ae24d3847007a301b57a178887bd" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>Buffer</name></member>
      <member refid="classrx_1_1_buffer_1a1e31ae5e388c834d7ad2815f0b06ee96" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>Buffer</name></member>
      <member refid="classrx_1_1_buffer_1a491b496f95f75b0b586d262be250a011" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>copyToBuffer</name></member>
      <member refid="classrx_1_1_buffer_1abc4c095d4eb6da7d00a6255074ed5d45" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>copyToImage</name></member>
      <member refid="classrx_1_1_buffer_1ae67da1cda37050466a0dda5edca5f0b0" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>fill</name></member>
      <member refid="classrx_1_1_buffer_1a4055ed30a94888249e37f3ea46bf09e9" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>get</name></member>
      <member refid="classrx_1_1_buffer_1a00f743b54f4f6ac79e4dde5079de1d5c" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>getMemory</name></member>
      <member refid="classrx_1_1_buffer_1a9f6c8caed7b9ae15afaa30644a87fa36" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>getSize</name></member>
      <member refid="classrx_1_1_buffer_1a3dcb26ae5db02346a1b81cac1c97dbbd" prot="public" virt="non-virtual"><scope>rx::Buffer</scope><name>init</name></member>
      <member refid="classrx_1_1_buffer_1a637f9f49535178d17698505ec0e4859a" prot="private" virt="non-virtual"><scope>rx::Buffer</scope><name>m_buffer</name></member>
      <member refid="classrx_1_1_buffer_1a6f2b7d287631e65d775cc41210c999d4" prot="private" virt="non-virtual"><scope>rx::Buffer</scope><name>m_memory</name></member>
      <member refid="classrx_1_1_buffer_1a9f35cdcb2aef37647274875014597c32" prot="private" virt="non-virtual"><scope>rx::Buffer</scope><name>m_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
