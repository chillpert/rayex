<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrx_1_1_uniform_buffer" kind="class" language="C++" prot="public">
    <compoundname>rx::UniformBuffer</compoundname>
    <includes refid="_uniform_buffer_8hpp" local="no">UniformBuffer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrx_1_1_uniform_buffer_1a19e35618f572beaf2f6fe3067253831d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classrx_1_1_buffer" kindref="compound">Buffer</ref> &gt;</type>
        <definition>std::vector&lt;Buffer&gt; rx::UniformBuffer::m_buffers</definition>
        <argsstring></argsstring>
        <name>m_buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="60" column="17" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrx_1_1_uniform_buffer_1a5bd1061900162cfabc9dc854ad8327a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rx::UniformBuffer::UniformBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>UniformBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_uniform_buffer_1ae61c151786e528fba593ae6be08e4c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>rx::UniformBuffer::UniformBuffer</definition>
        <argsstring>(size_t swapchainImagesCount, bool initialize=true)</argsstring>
        <name>UniformBuffer</name>
        <param>
          <type>size_t</type>
          <declname>swapchainImagesCount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialize</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="30" column="5" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_uniform_buffer_1aec354653f066ad10493ae507a14602a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classrx_1_1_buffer" kindref="compound">Buffer</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Buffer&gt;&amp; rx::UniformBuffer::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="36" column="30" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_uniform_buffer_1a10c7ba3ffc3597322de2c859fc61b661" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; vk::Buffer &gt;</type>
        <definition>const std::vector&lt; vk::Buffer &gt; rx::UniformBuffer::getRaw</definition>
        <argsstring>() const</argsstring>
        <name>getRaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="37" column="23" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.cpp" bodystart="6" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_uniform_buffer_1a51b0236c29581a330e477dff8d017aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rx::UniformBuffer::init</definition>
        <argsstring>(size_t swapchainImagesCount)</argsstring>
        <name>init</name>
        <param>
          <type>size_t</type>
          <declname>swapchainImagesCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="40" column="10" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" bodystart="40" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_uniform_buffer_1a0ec699086c85f14ab70137e64e7f1d72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rx::UniformBuffer::upload</definition>
        <argsstring>(uint32_t imageIndex, T &amp;ubo)</argsstring>
        <name>upload</name>
        <param>
          <type>uint32_t</type>
          <declname>imageIndex</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>ubo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="54" column="10" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" line="24" column="3" bodyfile="C:/Repos/renderer/src/api/buffers/UniformBuffer.hpp" bodystart="25" bodyend="61"/>
    <listofallmembers>
      <member refid="classrx_1_1_uniform_buffer_1aec354653f066ad10493ae507a14602a9" prot="public" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>get</name></member>
      <member refid="classrx_1_1_uniform_buffer_1a10c7ba3ffc3597322de2c859fc61b661" prot="public" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>getRaw</name></member>
      <member refid="classrx_1_1_uniform_buffer_1a51b0236c29581a330e477dff8d017aa8" prot="public" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>init</name></member>
      <member refid="classrx_1_1_uniform_buffer_1a19e35618f572beaf2f6fe3067253831d" prot="private" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>m_buffers</name></member>
      <member refid="classrx_1_1_uniform_buffer_1a5bd1061900162cfabc9dc854ad8327a9" prot="public" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>UniformBuffer</name></member>
      <member refid="classrx_1_1_uniform_buffer_1ae61c151786e528fba593ae6be08e4c5a" prot="public" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>UniformBuffer</name></member>
      <member refid="classrx_1_1_uniform_buffer_1a0ec699086c85f14ab70137e64e7f1d72" prot="public" virt="non-virtual"><scope>rx::UniformBuffer</scope><name>upload</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
