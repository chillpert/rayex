<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classrx_1_1_window_base" kind="class" language="C++" prot="public">
    <compoundname>rx::WindowBase</compoundname>
    <derivedcompoundref refid="class_custom_window" prot="public" virt="non-virtual">CustomWindow</derivedcompoundref>
    <includes refid="_window_base_8hpp" local="no">WindowBase.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" prot="protected" static="no" mutable="no">
        <type>SDL_Window *</type>
        <definition>SDL_Window* rx::WindowBase::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <briefdescription>
<para>The actual SDL_Window object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="96" column="16" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int rx::WindowBase::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <briefdescription>
<para>The window&apos;s width in pixels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="98" column="9" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int rx::WindowBase::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
<para>The window&apos;s height in pixels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="99" column="9" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_window_base_1a98ab6f3869a247eebc6ac3c02eee034f" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* rx::WindowBase::m_title</definition>
        <argsstring></argsstring>
        <name>m_title</name>
        <briefdescription>
<para>The window&apos;s title. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="100" column="16" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_window_base_1a717f1fc684aa4c1d5773e10b66fe6f6f" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rx::WindowBase::m_flags</definition>
        <argsstring></argsstring>
        <name>m_flags</name>
        <briefdescription>
<para>The window&apos;s flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="101" column="14" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrx_1_1_window_base_1a70eb7bea377c3a7c5dbb3f5c67a51fe3" prot="protected" static="no" mutable="no">
        <type><ref refid="classrx_1_1_time" kindref="compound">Time</ref></type>
        <definition>Time rx::WindowBase::m_time</definition>
        <argsstring></argsstring>
        <name>m_time</name>
        <briefdescription>
<para>The timer that manages the application&apos;s timing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="103" column="10" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrx_1_1_window_base_1a4c75fcc5018535133aa56a897ef8d385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API</type>
        <definition>rx::WindowBase::WindowBase</definition>
        <argsstring>(int width=600, int height=400, const char *title=&quot;My Application&quot;, uint32_t flags=0)</argsstring>
        <name>WindowBase</name>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>600</defval>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <defval>400</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
          <defval>&quot;My Application&quot;</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the window in pixels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the window in pixels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the window shown in the title bar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The window flags (no additional flags if not specified). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="43" column="12" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="5" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1ab2bac026a58aa4fdf3b809bfbe364014" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>RX_API</type>
        <definition>rx::WindowBase::~WindowBase</definition>
        <argsstring>()</argsstring>
        <name>~WindowBase</name>
        <briefdescription>
<para>Destructor of <ref refid="classrx_1_1_window_base" kindref="compound">WindowBase</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will also clean up the object&apos;s resources. <simplesect kind="see"><para><ref refid="classrx_1_1_window_base_1aa50e9ee4e58b6a36340180290d0c99d5" kindref="member">clean()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="49" column="20" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a3383242489b5e86c58efbf3f7a653fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>RX_API void</type>
        <definition>void rx::WindowBase::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <reimplementedby refid="class_custom_window_1a850b86f73d9458a0a6b98b15b2ae655b">init</reimplementedby>
        <briefdescription>
<para>Initializes the SDL-window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="52" column="25" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="20" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a7d169824a215063c9574568b6e6fecba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>RX_API bool</type>
        <definition>bool rx::WindowBase::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <reimplementedby refid="class_custom_window_1ac0b3f3bfe1b98bf47b67a332794462e3">update</reimplementedby>
        <briefdescription>
<para>Updates window-related components. </para>
        </briefdescription>
        <detaileddescription>
<para>In case the client wants to handle input events, this function should be overwritten in the inherited class. <simplesect kind="warning"><para>The client has to call <ref refid="classrx_1_1_window_base_1a7d169824a215063c9574568b6e6fecba" kindref="member">WindowBase::update()</ref> to ensure proper functionality. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="58" column="25" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="33" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1aa50e9ee4e58b6a36340180290d0c99d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>RX_API void</type>
        <definition>void rx::WindowBase::clean</definition>
        <argsstring>()</argsstring>
        <name>clean</name>
        <briefdescription>
<para>Destroys the window. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="61" column="25" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a6313eb78b5d688f3e3997c5163e9ac69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API void</type>
        <definition>void rx::WindowBase::resize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>resize</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Resizes the window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired width in pixels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired height in pixels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="66" column="17" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a4c965865eadbec64d88bdb0de3a9fbaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; const char * &gt;</type>
        <definition>std::vector&lt; const char * &gt; rx::WindowBase::getInstanceExtensions</definition>
        <argsstring>()</argsstring>
        <name>getInstanceExtensions</name>
        <briefdescription>
<para>Used to retrieve all Vulkan instance extensions required by SDL. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a vector containing the names of the required extensions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="70" column="17" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="61" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1af058b1991691b3ef0c0bacedc0a895ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API vk::SurfaceKHR</type>
        <definition>vk::SurfaceKHR rx::WindowBase::createSurface</definition>
        <argsstring>(vk::Instance instance)</argsstring>
        <name>createSurface</name>
        <param>
          <type>vk::Instance</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Creates a Vulkan surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The Vulkan instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the Vulkan surface. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="75" column="27" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="84" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a98c9d4d754b8ade7a3710ac198610b3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RX_API SDL_Window *</type>
        <definition>RX_API SDL_Window* rx::WindowBase::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the actual SDL_Window object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="78" column="30" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1ada758bbb29c65ef6cb109c99afa8698d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RX_API vk::Extent2D</type>
        <definition>vk::Extent2D rx::WindowBase::getExtent</definition>
        <argsstring>() const</argsstring>
        <name>getExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the window size as a Vulkan 2D extent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="81" column="32" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a0bbec2310999df0b650eedf75080cce7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int rx::WindowBase::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the window&apos;s width in pixels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="84" column="16" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a65a4f319a081ec272bda60264f69a960" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int rx::WindowBase::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the window&apos;s height in pixels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="87" column="16" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a286b65f440d6ae3b2e2e49542ea2b1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API bool</type>
        <definition>bool rx::WindowBase::changed</definition>
        <argsstring>()</argsstring>
        <name>changed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if the window size has changed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="90" column="17" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="103" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classrx_1_1_window_base_1a0daf35316a751cb18d4c8589a503a0dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API bool</type>
        <definition>bool rx::WindowBase::minimized</definition>
        <argsstring>()</argsstring>
        <name>minimized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns true if the window is minimized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="93" column="17" bodyfile="C:/Repos/renderer/src/window/WindowBase.cpp" bodystart="118" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements a SDL-based window. </para>
    </briefdescription>
    <detaileddescription>
<para>In order to handle events the client has to create a class that inherits from <ref refid="classrx_1_1_window_base" kindref="compound">WindowBase</ref>. </para>
<sect3 id="classrx_1_1_window_base_1autotoc_md3">
<title>Example</title>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>This<sp/>example<sp/>requires<sp/>the<sp/>client<sp/>to<sp/>implement<sp/>a<sp/>custom<sp/>window<sp/>class<sp/>that<sp/>inherits<sp/>from<sp/>WindowBase.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>myWindow<sp/>=<sp/>std::make_shared&lt;CustomWindow&gt;(<sp/>width,<sp/>height,<sp/></highlight><highlight class="stringliteral">&quot;Example&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacerx_1a108d586192564f598fd82c8c2483fe8aa7b53bf1790791de422a956078f4b984f" kindref="member">WINDOW_RESIZABLE</ref><sp/>|<sp/><ref refid="namespacerx_1a108d586192564f598fd82c8c2483fe8aafb910e9581cc84fcc2e9556e7b831274" kindref="member">WINDOW_INPUT_FOCUS</ref><sp/>);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="classrx_1_1_window_base_1a7d169824a215063c9574568b6e6fecba" kindref="member">update()</ref> </para>
</simplesect>
</para>
</sect3>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rx::WindowBase</label>
        <link refid="classrx_1_1_window_base"/>
      </node>
      <node id="2">
        <label>CustomWindow</label>
        <link refid="class_custom_window"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rx::WindowBase</label>
        <link refid="classrx_1_1_window_base"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_time</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>rx::Time</label>
        <link refid="classrx_1_1_time"/>
      </node>
    </collaborationgraph>
    <location file="C:/Repos/renderer/src/window/WindowBase.hpp" line="36" column="3" bodyfile="C:/Repos/renderer/src/window/WindowBase.hpp" bodystart="37" bodyend="104"/>
    <listofallmembers>
      <member refid="classrx_1_1_window_base_1a286b65f440d6ae3b2e2e49542ea2b1bc" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>changed</name></member>
      <member refid="classrx_1_1_window_base_1aa50e9ee4e58b6a36340180290d0c99d5" prot="public" virt="virtual"><scope>rx::WindowBase</scope><name>clean</name></member>
      <member refid="classrx_1_1_window_base_1af058b1991691b3ef0c0bacedc0a895ed" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>createSurface</name></member>
      <member refid="classrx_1_1_window_base_1a98c9d4d754b8ade7a3710ac198610b3b" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>get</name></member>
      <member refid="classrx_1_1_window_base_1ada758bbb29c65ef6cb109c99afa8698d" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>getExtent</name></member>
      <member refid="classrx_1_1_window_base_1a65a4f319a081ec272bda60264f69a960" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>getHeight</name></member>
      <member refid="classrx_1_1_window_base_1a4c965865eadbec64d88bdb0de3a9fbaf" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>getInstanceExtensions</name></member>
      <member refid="classrx_1_1_window_base_1a0bbec2310999df0b650eedf75080cce7" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>getWidth</name></member>
      <member refid="classrx_1_1_window_base_1a3383242489b5e86c58efbf3f7a653fd5" prot="public" virt="virtual"><scope>rx::WindowBase</scope><name>init</name></member>
      <member refid="classrx_1_1_window_base_1a717f1fc684aa4c1d5773e10b66fe6f6f" prot="protected" virt="non-virtual"><scope>rx::WindowBase</scope><name>m_flags</name></member>
      <member refid="classrx_1_1_window_base_1a1fc9dd1927001604a39e73f79458c526" prot="protected" virt="non-virtual"><scope>rx::WindowBase</scope><name>m_height</name></member>
      <member refid="classrx_1_1_window_base_1a70eb7bea377c3a7c5dbb3f5c67a51fe3" prot="protected" virt="non-virtual"><scope>rx::WindowBase</scope><name>m_time</name></member>
      <member refid="classrx_1_1_window_base_1a98ab6f3869a247eebc6ac3c02eee034f" prot="protected" virt="non-virtual"><scope>rx::WindowBase</scope><name>m_title</name></member>
      <member refid="classrx_1_1_window_base_1a25e9c6984933a51e17c638ce3ba263de" prot="protected" virt="non-virtual"><scope>rx::WindowBase</scope><name>m_width</name></member>
      <member refid="classrx_1_1_window_base_1a7a7808875387bf9d2b942710fb9217b5" prot="protected" virt="non-virtual"><scope>rx::WindowBase</scope><name>m_window</name></member>
      <member refid="classrx_1_1_window_base_1a0daf35316a751cb18d4c8589a503a0dd" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>minimized</name></member>
      <member refid="classrx_1_1_window_base_1a6313eb78b5d688f3e3997c5163e9ac69" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>resize</name></member>
      <member refid="classrx_1_1_window_base_1a7d169824a215063c9574568b6e6fecba" prot="public" virt="virtual"><scope>rx::WindowBase</scope><name>update</name></member>
      <member refid="classrx_1_1_window_base_1a4c75fcc5018535133aa56a897ef8d385" prot="public" virt="non-virtual"><scope>rx::WindowBase</scope><name>WindowBase</name></member>
      <member refid="classrx_1_1_window_base_1ab2bac026a58aa4fdf3b809bfbe364014" prot="public" virt="virtual"><scope>rx::WindowBase</scope><name>~WindowBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
