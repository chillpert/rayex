<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e" kind="namespace" language="C++">
    <compoundname>RAYEX_NAMESPACE</compoundname>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_api" prot="public">RAYEX_NAMESPACE::Api</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_acceleration_structure" prot="public">RAYEX_NAMESPACE::AccelerationStructure</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_tlas" prot="public">RAYEX_NAMESPACE::Tlas</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_blas" prot="public">RAYEX_NAMESPACE::Blas</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_pt_push_constants" prot="public">RAYEX_NAMESPACE::PtPushConstants</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_path_tracing_capabilities" prot="public">RAYEX_NAMESPACE::PathTracingCapabilities</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_path_tracer" prot="public">RAYEX_NAMESPACE::PathTracer</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_post_processing_renderer" prot="public">RAYEX_NAMESPACE::PostProcessingRenderer</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_vertex" prot="public">RAYEX_NAMESPACE::Vertex</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_camera" prot="public">RAYEX_NAMESPACE::Camera</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_camera_ubo" prot="public">RAYEX_NAMESPACE::CameraUbo</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_material" prot="public">RAYEX_NAMESPACE::Material</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" prot="public">RAYEX_NAMESPACE::Geometry</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance" prot="public">RAYEX_NAMESPACE::GeometryInstance</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_material_s_s_b_o" prot="public">RAYEX_NAMESPACE::MaterialSSBO</innerclass>
    <innerclass refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance_s_s_b_o" prot="public">RAYEX_NAMESPACE::GeometryInstanceSSBO</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_gui" prot="public">RAYEX_NAMESPACE::Gui</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_scene" prot="public">RAYEX_NAMESPACE::Scene</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_settings" prot="public">RAYEX_NAMESPACE::Settings</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_time" prot="public">RAYEX_NAMESPACE::Time</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_window" prot="public">RAYEX_NAMESPACE::Window</innerclass>
    <innerclass refid="class_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_rayex" prot="public">RAYEX_NAMESPACE::Rayex</innerclass>
    <innernamespace refid="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1components">RAYEX_NAMESPACE::components</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1a997bf023e5202653ba7b804848f245e4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RAYEX_NAMESPACE::defaultWidth</definition>
        <argsstring></argsstring>
        <name>defaultWidth</name>
        <initializer>= 900</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Window.hpp" line="9" column="13" bodyfile="/home/n30/Repos/rayex/include/base/Window.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1aff8ee7aaab7d155f60fd777d09664159" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int RAYEX_NAMESPACE::defaultHeight</definition>
        <argsstring></argsstring>
        <name>defaultHeight</name>
        <initializer>= 600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Window.hpp" line="10" column="13" bodyfile="/home/n30/Repos/rayex/include/base/Window.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1a3544ae5f32fe827a6e65b423d680c963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::initAccelerationStructure</definition>
        <argsstring>(vk::AccelerationStructureCreateInfoKHR &amp;asCreateInfo) -&gt; AccelerationStructure</argsstring>
        <name>initAccelerationStructure</name>
        <param>
          <type>vk::AccelerationStructureCreateInfoKHR &amp;</type>
          <declname>asCreateInfo</declname>
        </param>
        <briefdescription>
<para>Creates the acceleration structure and allocates and binds memory for it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asCreateInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The Vulkan init info for the acceleration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_acceleration_structure" kindref="compound">RAYEX_NAMESPACE::AccelerationStructure</ref> object that contains the AS itself as well as the memory for it. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/pathtrace/AccelerationStructure.hpp" line="41" column="8" declfile="/home/n30/Repos/rayex/include/api/pathtrace/AccelerationStructure.hpp" declline="41" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_s_e_1ga2d50e1cd402880131042e1bcab773b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" kindref="compound">Geometry</ref> &gt;</type>
        <definition>RX_API std::shared_ptr&lt;Geometry&gt; RAYEX_NAMESPACE::loadObj</definition>
        <argsstring>(std::string_view path, bool dynamic=false)</argsstring>
        <name>loadObj</name>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dynamic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>A commodity function for loading a wavefront (.obj) model file and allocate a geometry object from it. </para>
        </briefdescription>
        <detaileddescription>
<para>The function will attempt to find sub-meshes in the file and retrieve all materials. A user is encouraged to create their own model loader function or classes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The model&apos;s path, relative to the path to assets. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dynamic</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the geometry can be animated. Otherwise the geometry is static throughout its entire lifetime. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a pointer to a geometry object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Geometry.hpp" line="76" column="26" declfile="/home/n30/Repos/rayex/include/base/Geometry.hpp" declline="76" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_s_e_1gad880ea304e8ff3dab6ea5258df8970cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RX_API std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry_instance" kindref="compound">GeometryInstance</ref> &gt;</type>
        <definition>RX_API std::shared_ptr&lt;GeometryInstance&gt; RAYEX_NAMESPACE::instance</definition>
        <argsstring>(std::shared_ptr&lt; Geometry &gt; geometry, const glm::mat4 &amp;transform=glm::mat4(1.0F))</argsstring>
        <name>instance</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="struct_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_geometry" kindref="compound">Geometry</ref> &gt;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>transform</declname>
          <defval>glm::mat4(1.0F)</defval>
        </param>
        <briefdescription>
<para>A commodity function for allocating an instance from a given geometry and set its matrices. </para>
        </briefdescription>
        <detaileddescription>
<para>The function will also automatically set the inverse transpose matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry to create the instance from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The world transform matrix of the instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a pointer to a geometry instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/base/Geometry.hpp" line="85" column="26" declfile="/home/n30/Repos/rayex/include/base/Geometry.hpp" declline="85" declcolumn="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The rx namespace encapsulates every single component provided by the renderer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/n30/Repos/rayex/include/api/Api.hpp" line="10" column="1"/>
  </compounddef>
</doxygen>
