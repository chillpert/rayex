<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_util" kind="namespace" language="C++">
    <compoundname>RAYEX_NAMESPACE::Util</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_util_1a0688371689cb8fc05d6a7a85bad79a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Util::parseShader</definition>
        <argsstring>(std::string_view path) -&gt; std::vector&lt; char &gt;</argsstring>
        <name>parseShader</name>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Parses a given shader file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to shader file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a vector of chars that contains the shader in SPIR-V format. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/utility/Util.hpp" line="12" column="10" declfile="/home/n30/Repos/rayex/include/api/utility/Util.hpp" declline="12" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_util_1a73f0c4b677c819ecf5a6083506e47b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAYEX_NAMESPACE::Util::processShaderMacros</definition>
        <argsstring>(std::string_view path, uint32_t dirLightNodes, uint32_t pointLightNodes, uint32_t totalModels)</argsstring>
        <name>processShaderMacros</name>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dirLightNodes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pointLightNodes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>totalModels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/utility/Util.hpp" line="14" column="10" declfile="/home/n30/Repos/rayex/include/api/utility/Util.hpp" declline="14" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_util_1a597142ff896b6224f5dd9e4cd06b186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Util::find</definition>
        <argsstring>(T value, const Container &amp;values) -&gt; bool</argsstring>
        <name>find</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const Container &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Used to find any given element inside a STL container. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The STL container of the same type as value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true, if value was found in values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/utility/Util.hpp" line="21" column="10" bodyfile="/home/n30/Repos/rayex/include/api/utility/Util.hpp" bodystart="21" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_util_1a68d3d47e91753b329cd0e075f75d26fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Util::vec4toArray</definition>
        <argsstring>(const glm::vec4 &amp;vec) -&gt; std::array&lt; float, 4 &gt;</argsstring>
        <name>vec4toArray</name>
        <param>
          <type>const glm::vec4 &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/utility/Util.hpp" line="32" column="10" declfile="/home/n30/Repos/rayex/include/api/utility/Util.hpp" declline="32" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_r_a_y_e_x___n_a_m_e_s_p_a_c_e_1_1_util_1a123f863dbcf88702a681a0217593caa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto RAYEX_NAMESPACE::Util::listToVec</definition>
        <argsstring>(const std::list&lt; T &gt; &amp;vec) -&gt; std::vector&lt; T &gt;</argsstring>
        <name>listToVec</name>
        <param>
          <type>const std::list&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/n30/Repos/rayex/include/api/utility/Util.hpp" line="35" column="10" bodyfile="/home/n30/Repos/rayex/include/api/utility/Util.hpp" bodystart="35" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/n30/Repos/rayex/include/api/utility/Util.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>
