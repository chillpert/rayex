<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="namespacevk_1_1_initializer" kind="namespace" language="C++">
    <compoundname>vk::Initializer</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a5c41b4c6ef81ecf1f45fdb226048a318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueFence</type>
        <definition>UniqueFence vk::Initializer::createFenceUnique</definition>
        <argsstring>(FenceCreateFlags flags)</argsstring>
        <name>createFenceUnique</name>
        <param>
          <type>FenceCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="9" column="17" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="9" bodyend="17" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="14" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a75e39e91b0bee720788508f1ceda0f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Fence</type>
        <definition>Fence vk::Initializer::createFence</definition>
        <argsstring>(FenceCreateFlags flags)</argsstring>
        <name>createFence</name>
        <param>
          <type>FenceCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="19" column="11" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="19" bodyend="27" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="19" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a553b320a0bd8df5a53b5cde1ebe632ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueSemaphore</type>
        <definition>UniqueSemaphore vk::Initializer::createSemaphoreUnique</definition>
        <argsstring>(SemaphoreCreateFlags flags)</argsstring>
        <name>createSemaphoreUnique</name>
        <param>
          <type>SemaphoreCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="29" column="21" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="29" bodyend="37" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="24" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1afc36459f8f5bc3b231aae43d8a89ceb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Semaphore</type>
        <definition>Semaphore vk::Initializer::createSemaphore</definition>
        <argsstring>(SemaphoreCreateFlags flags)</argsstring>
        <name>createSemaphore</name>
        <param>
          <type>SemaphoreCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="39" column="15" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="39" bodyend="47" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="29" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a4a0507cd0310e5c91a8f22342c82a5bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueCommandPool</type>
        <definition>UniqueCommandPool vk::Initializer::createCommandPoolUnique</definition>
        <argsstring>(uint32_t queueFamilyIndex, CommandPoolCreateFlags flags)</argsstring>
        <name>createCommandPoolUnique</name>
        <param>
          <type>uint32_t</type>
          <declname>queueFamilyIndex</declname>
        </param>
        <param>
          <type>CommandPoolCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="49" column="23" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="49" bodyend="57" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="35" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1ad180894bda2fb11ef4396cabbbe95f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CommandPool</type>
        <definition>CommandPool vk::Initializer::createCommandPool</definition>
        <argsstring>(uint32_t queueFamilyIndex, CommandPoolCreateFlags flags)</argsstring>
        <name>createCommandPool</name>
        <param>
          <type>uint32_t</type>
          <declname>queueFamilyIndex</declname>
        </param>
        <param>
          <type>CommandPoolCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="59" column="17" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="59" bodyend="67" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="41" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a96c7f4f958b01d7cad46d2c5ebaa94f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueDescriptorPool</type>
        <definition>UniqueDescriptorPool vk::Initializer::createDescriptorPoolUnique</definition>
        <argsstring>(const std::vector&lt; DescriptorPoolSize &gt; &amp;poolSizes, uint32_t maxSets, DescriptorPoolCreateFlags flags)</argsstring>
        <name>createDescriptorPoolUnique</name>
        <param>
          <type>const std::vector&lt; DescriptorPoolSize &gt; &amp;</type>
          <declname>poolSizes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxSets</declname>
        </param>
        <param>
          <type>DescriptorPoolCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="69" column="26" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="69" bodyend="80" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="48" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1acd5a201a5576ff74bd68adfb6856d9d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DescriptorPool</type>
        <definition>DescriptorPool vk::Initializer::createDescriptorPool</definition>
        <argsstring>(const std::vector&lt; DescriptorPoolSize &gt; &amp;poolSizes, uint32_t maxSets, DescriptorPoolCreateFlags flags)</argsstring>
        <name>createDescriptorPool</name>
        <param>
          <type>const std::vector&lt; DescriptorPoolSize &gt; &amp;</type>
          <declname>poolSizes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxSets</declname>
        </param>
        <param>
          <type>DescriptorPoolCreateFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="82" column="20" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="82" bodyend="93" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="55" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1aaf971d37968849d18a9c8bc51b7214d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueDeviceMemory</type>
        <definition>UniqueDeviceMemory vk::Initializer::allocateMemoryUnique</definition>
        <argsstring>(Image image, MemoryPropertyFlags propertyFlags, void *pNext)</argsstring>
        <name>allocateMemoryUnique</name>
        <param>
          <type>Image</type>
          <declname>image</declname>
        </param>
        <param>
          <type>MemoryPropertyFlags</type>
          <declname>propertyFlags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pNext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="95" column="24" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="95" bodyend="110" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="61" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1ac45c9a57ebad6f7ad93e067ed9522482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DeviceMemory</type>
        <definition>DeviceMemory vk::Initializer::allocateMemory</definition>
        <argsstring>(Image image, MemoryPropertyFlags propertyFlags, void *pNext)</argsstring>
        <name>allocateMemory</name>
        <param>
          <type>Image</type>
          <declname>image</declname>
        </param>
        <param>
          <type>MemoryPropertyFlags</type>
          <declname>propertyFlags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pNext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="112" column="18" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="112" bodyend="127" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="67" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a076de0b6ac74c2db0e6a7521f812ea31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueDeviceMemory</type>
        <definition>UniqueDeviceMemory vk::Initializer::allocateMemoryUnique</definition>
        <argsstring>(Buffer buffer, MemoryPropertyFlags propertyFlags, void *pNext)</argsstring>
        <name>allocateMemoryUnique</name>
        <param>
          <type>Buffer</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>MemoryPropertyFlags</type>
          <declname>propertyFlags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pNext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="129" column="24" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="129" bodyend="144" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="73" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1adaf1f319c431560033d2007d80f318ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vk::Initializer::allocateMemory</definition>
        <argsstring>(rx::AccelerationStructure &amp;as)</argsstring>
        <name>allocateMemory</name>
        <param>
          <type><ref refid="structrx_1_1_acceleration_structure" kindref="compound">rx::AccelerationStructure</ref> &amp;</type>
          <declname>as</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="146" column="10" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="146" bodyend="171" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="77" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a290eb6b8bc181fdc84971e44a95dee71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DeviceMemory</type>
        <definition>DeviceMemory vk::Initializer::allocateMemory</definition>
        <argsstring>(Buffer buffer, MemoryPropertyFlags propertyFlags, void *pNext)</argsstring>
        <name>allocateMemory</name>
        <param>
          <type>Buffer</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>MemoryPropertyFlags</type>
          <declname>propertyFlags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pNext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="173" column="18" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="173" bodyend="188" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="83" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a962e46155dc58c46245cc58a65ececbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueImageView</type>
        <definition>UniqueImageView vk::Initializer::createImageViewUnique</definition>
        <argsstring>(Image image, Format format, ImageAspectFlags aspectFlags)</argsstring>
        <name>createImageViewUnique</name>
        <param>
          <type>Image</type>
          <declname>image</declname>
        </param>
        <param>
          <type>Format</type>
          <declname>format</declname>
        </param>
        <param>
          <type>ImageAspectFlags</type>
          <declname>aspectFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="190" column="21" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="190" bodyend="220" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="89" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a68e7faff8839638ac038c12d728ce6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ImageView</type>
        <definition>ImageView vk::Initializer::createImageView</definition>
        <argsstring>(Image image, Format format, ImageAspectFlags aspectFlags)</argsstring>
        <name>createImageView</name>
        <param>
          <type>Image</type>
          <declname>image</declname>
        </param>
        <param>
          <type>Format</type>
          <declname>format</declname>
        </param>
        <param>
          <type>ImageAspectFlags</type>
          <declname>aspectFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="222" column="15" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="222" bodyend="252" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="95" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1af7fafdadf4b47aff7936fce8782d1311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueSampler</type>
        <definition>UniqueSampler vk::Initializer::createSamplerUnique</definition>
        <argsstring>(const SamplerCreateInfo &amp;createInfo)</argsstring>
        <name>createSamplerUnique</name>
        <param>
          <type>const SamplerCreateInfo &amp;</type>
          <declname>createInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="254" column="19" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="254" bodyend="260" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="101" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a2e3e8160b81f2f24e4754906355f1ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Sampler</type>
        <definition>Sampler vk::Initializer::createSampler</definition>
        <argsstring>(const SamplerCreateInfo &amp;createInfo)</argsstring>
        <name>createSampler</name>
        <param>
          <type>const SamplerCreateInfo &amp;</type>
          <declname>createInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="262" column="13" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="262" bodyend="268" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="107" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a27157ac87ba69ecc219184443b7279f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueFramebuffer</type>
        <definition>UniqueFramebuffer vk::Initializer::createFramebufferUnique</definition>
        <argsstring>(const std::vector&lt; ImageView &gt; &amp;attachments, RenderPass renderPass, const Extent2D &amp;extent)</argsstring>
        <name>createFramebufferUnique</name>
        <param>
          <type>const std::vector&lt; ImageView &gt; &amp;</type>
          <declname>attachments</declname>
        </param>
        <param>
          <type>RenderPass</type>
          <declname>renderPass</declname>
        </param>
        <param>
          <type>const Extent2D &amp;</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="270" column="23" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="270" bodyend="284" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="114" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1af86e353fda1ebfcdfd3e60fd1891a203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Framebuffer</type>
        <definition>Framebuffer vk::Initializer::createFramebuffer</definition>
        <argsstring>(const std::vector&lt; ImageView &gt; &amp;attachments, RenderPass renderPass, const Extent2D &amp;extent)</argsstring>
        <name>createFramebuffer</name>
        <param>
          <type>const std::vector&lt; ImageView &gt; &amp;</type>
          <declname>attachments</declname>
        </param>
        <param>
          <type>RenderPass</type>
          <declname>renderPass</declname>
        </param>
        <param>
          <type>const Extent2D &amp;</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="286" column="17" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="286" bodyend="300" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="121" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1ae1aa45605bbbeff34170dda70f380363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueQueryPool</type>
        <definition>UniqueQueryPool vk::Initializer::createQueryPoolUnique</definition>
        <argsstring>(uint32_t count, QueryType type)</argsstring>
        <name>createQueryPoolUnique</name>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>QueryType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="302" column="21" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="302" bodyend="313" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="127" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1a6e9de22a304ba6c271e7063b765ea684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QueryPool</type>
        <definition>QueryPool vk::Initializer::createQueryPool</definition>
        <argsstring>(uint32_t count, QueryType type)</argsstring>
        <name>createQueryPool</name>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>QueryType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="315" column="15" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="315" bodyend="326" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="133" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1ade34b50ac5ead941b7d2b20c828864d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UniqueShaderModule</type>
        <definition>UniqueShaderModule vk::Initializer::createShaderModuleUnique</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>createShaderModuleUnique</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="328" column="24" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="328" bodyend="340" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="138" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1acfa78e54318d113b7632d028f12c9f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ShaderModule</type>
        <definition>ShaderModule vk::Initializer::createShaderModule</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>createShaderModule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="342" column="18" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="342" bodyend="354" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="143" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespacevk_1_1_initializer_1aeef3a8fde04c8d29eb1a6ecd4bb5fb87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrx_1_1_acceleration_structure" kindref="compound">rx::AccelerationStructure</ref></type>
        <definition>rx::AccelerationStructure vk::Initializer::createAccelerationStructure</definition>
        <argsstring>(const vk::AccelerationStructureCreateInfoKHR &amp;asCreateInfo)</argsstring>
        <name>createAccelerationStructure</name>
        <param>
          <type>const vk::AccelerationStructureCreateInfoKHR &amp;</type>
          <declname>asCreateInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="356" column="31" bodyfile="C:/Repos/renderer/src/api/utility/Initializers.cpp" bodystart="356" bodyend="364" declfile="C:/Repos/renderer/src/api/utility/Initializers.hpp" declline="148" declcolumn="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Repos/renderer/src/api/utility/Initializers.cpp" line="7" column="3"/>
  </compounddef>
</doxygen>
